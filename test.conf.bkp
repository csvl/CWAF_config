DefineStr ErrorLog        "~{LogRoot}/error.log"

<VirtualHost test.com:80>
DefineStr SecLog          "~{LogRoot}/audit.log"
DefineStr SecDebugLog     "~{LogRoot}/audit.debug"
ErrorLog ~{ErrorLog}
LogLevel warn


DocumentRoot ~{DocumentRoot}
SecAuditLogType Serial
SecAuditLog  ~{SecLog}

<If "1 == 1">
 <If "1 == 1">
SecResponseBodyAccess     on

SecHashKey rand KeyOnly

<Directory />
 AllowOverride none
 Options +FollowSymLinks -SymLinksIfOwnerMatch
</Directory>
 </If>
</If>

MacroIgnoreBadNesting

RewriteEngine on
RewriteOptions InheritDownBefore

<Macro dummy $first $second>
 SecRule $first $second
</Macro>


SecAuditEngine     on
SecRuleEngine      on
SecRuleInheritance on

Listen 80

RewriteRule ^ /robots.txt [L]

</VirtualHost>

<If "1 == 1">
 <If "1 == 1">
  <If "1 == 1">
   <If "1 == 1">
      Use dummy yay phase:5
      SecRule ENV:var "^/$p1/(.*-ph$p2)/|^.*-ph$p1/(.*-ph$p2)(?:$|/)"  "phase:4,capture,nolog,auditlog,msg:'%{tx.1}%{tx.2}'"
   </If>
  </If>
   <ElseIf "1 == 0">
      Use dummy nope hello
   </ElseIf>
 </If>
 <Else>
   Use dummy nope phase:1
 </Else>
</If>


<If "1 == 1">
 <If "1 == 1">
DefineStr AccessLog       "~{LogRoot}/access.log"
DefineStr RewriteLog      "~{LogRoot}/rewrite.debug"
 </If>
</If>

<Location /home>
   Use dummy fizz phase:3
</Location>

SecRequestBodyAccess      on
SecStreamInBodyInspection off



