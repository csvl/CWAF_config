<Macro Sonarqube_Proxy_ $(ssl) @frontServer $frontPath @protocol $backServer $backPort @backPath>
 Use Proxy$(ssl)Ext @frontServer "$frontPath" @protocol "$backServer" $backPort @backPath
 Use SecWebAppId SonarQube
 Use UTF8Encoding "^$frontPath/"
 
 <Location $frontPath/>
  Use PackageSoftware
  Use BackendWebJava
  Use DBPostGres
  # Use ORM
  Use AcceptCookie "JWT-SESSION"
  Use AcceptCookie "XSRF-TOKEN"
  Use CookieNotHttpOnly "XSRF-TOKEN"
  Use SecArgsAllowUnicode
  Use CSPallowInternalScript
  Use CSPallowInternalStyle
  Use CSPallowEvalInScript
  Use SecAllowQueryInPost
  
  Use SecAllowExt "protobuf"
  Use SecRuleRemoveByFullTag SHORT

  # Application uses developers' paths in ARGS
  Use SecAllowNamespaces
 </Location>
 
 <Location $frontPath/admin>
  Use SecRestrictIpInternal
  Use SecRuleRemoveById 2000184
 </Location>
 
 <Location $frontPath/api/system/status>
  #Allow /system/ in path
  Use SecRuleRemoveById 2001209
 </Location>
 
 <Location $frontPath/dashboars/index/>
  Use SecAllowAllExt
 </Location>
 
 <Location $frontPath/deploy/plugins>
  Use SecAllowExt "jar"
 </Location>
 
 <Location $frontPath/js>
  Use SecAllowCharsInUpDownDocs "~"
 </Location>
 
 </Macro>
<Macro Sonarqube_Proxy @frontServer @frontPath @protocol @backServer @backPort @backPath>
 Use Sonarqube_Proxy_ "" @frontServer @frontPath @protocol @backServer @backPort @backPath
</Macro>
<Macro Sonarqube_ProxySSL @frontServer @frontPath @protocol @backServer @backPort @backPath>
 Use Sonarqube_Proxy_ SSL @frontServer @frontPath @protocol @backServer @backPort @backPath
</Macro>
