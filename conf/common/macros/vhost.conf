# :: Vhost definition

<Macro SetVHostTimeout @t>
 TimeOut      @t
 ProxyTimeOut @t
</Macro>

<Macro DisableAllRequestsLocation $id>
 <IfDefine !noSecurityHeader>
  Use SecAction "phase:2,id:$id,~{DisableAllRequestsStatus},setenv:no-log,msg:'This location is not allowed',tag:AccessControl,setvar:TX.DisableAllReq"
 </IfDefine>
</Macro>

<Macro DisableAllRequests>
 <IfDefine !noSecurityRules>
  # Aimed at Vhosts => no techno defined
  Use NoBackendTechno
  # Allow monitoring tools
  Use SecRule IP:monitor_ip @unconditionalMatch "phase:1,~{skipAfter}:AfterDisableAllRequestsLocation"
  Use SecRule IP:monitor_ip @unconditionalMatch "phase:2,~{skipAfter}:AfterDisableAllRequestsLocation"
   # We only want this rule to be active, to avoid reports about other aspects
   # Don't remove all rules, this also disables exceptions (/probe, ...)
   Use SecAction "phase:1,~{DisableAllRequestsStatus},setenv:no-log,msg:'This vhost is not allowed',tag:AccessControl,setvar:TX.DisableAllReq"
   # In case it's used inside a location (thus the above rule didn't trigger, even in DetectionOnly)
   Use DisableAllRequestsLocation 1
  Use SecMarker AfterDisableAllRequestsLocation
 </IfDefine>
</Macro>

# Enforce TLS for the whole site (for one year) - RFC 6797
<Macro HSTS @value>
 <IfDefine !noSecurityHeader>
  # "always" => 2 headers => concatenated => error
  Header always set  Strict-Transport-Security @value     
  Header always edit Strict-Transport-Security " *,.*" ""
 </IfDefine>
</Macro>

# Suppress TLS pre-load
<Macro HSTS_NoPreload>
 <IfDefine !noSecurityHeader>
  Use Header edit Strict-Transport-Security ";preload\s*+" "" env=!noCSPChange
 </IfDefine>
</Macro>

# Suppress HSTS
<Macro HSTS_suppress>
 <IfDefine !noSecurityHeader>
  Use HSTS "max-age=0"
 </IfDefine>
</Macro>

# Enforce SSL for the whole site
<Macro ForceVhostSSL @host>
 #Use HSTS "max-age=31536000;includeSubDomains;preload"
 Use HSTS "max-age=~{HSTSMaxAge}"
 Use EnforceSSL @host ""
</Macro>

<Macro DefaultVhostOnlyInSSL>
 Use ForceVhostSSL default
 Use DisableAllRequests
</Macro>

<Macro BeginVhostNoName @ip_port>
 <VirtualHost @ip_port>
  Use DebugSubst vhost_begin
  Include conf/common/local.conf
</Macro>

<Macro BeginVhost__ $name @ip_port>
 Use TrustHost      $name
 Use BeginVhostNoName     @ip_port
  ServerName        $name
  Use SecWebAppId   $name
</Macro>

<Macro BeginVhost_ @name @ip_port>
 Use BeginVhost__  @name @ip_port
</Macro>

<Macro BeginVhostLocalPort @name    $port>
 Use BeginVhost__          @name "*:$port"
  Use AllowLocalPages
  Use SecStaticPages
</Macro>

<Macro BeginVhostPort @name    $port>
 Use BeginVhost_      @name "*:$port"
</Macro>

<Macro BeginVhostLocal   @name>
 Use BeginVhostLocalPort @name 80
</Macro>

<Macro BeginVhost $name>
 Use BeginVhostPort "$name" 80
 # Page to redirect to after an OIDC authentication time-out and a logout
 Use mod_oidc_default_url "http://$name/"
</Macro>

<Macro BeginSSLVhostNoName @ip_port>
 Use BeginVhostNoName      @ip_port
 Include conf/common/sslv.conf
</Macro>

<Macro BeginSSLVhost $name @ip_port>
 Use BeginVhost_     $name @ip_port
  # Page to redirect to after an OIDC authentication time-out and a logout
  Use mod_oidc_default_url "https://$name/"
  Include conf/common/sslv.conf
</Macro>

# Although it seems logical to define the macro only once with <IfModule> inside,
# it's not possible to use <IfModule> containing begin/endvhost inside a macro
<IfModule ssl_module>
 <Macro BeginSSLOnlyVhost @name @ip_port>
  Use RemapServerToHTTPS  @name
  <IfDefine !noHttpVhost>
   Use BeginVhost @name
    Use ForceVhostSSL @name
    # Disable all coming rules because we redirect to another vhost
    Use SecRuleRemoveByID ~{allRules}
    Use SecAction "phase:1,t:none,~{stopSecurity}"
   Use EndVhost
  </IfDefine>
  Use BeginSSLVhost  @name @ip_port
   Use ForceVhostSSL @name
 </Macro>
</IfModule>
<IfModule !ssl_module>
 <Macro BeginSSLOnlyVhost @name @ip_port>
  Use UnusedParam @ip_port
  Use RemapServerToHTTPS @name
  Use BeginVhost @name
   Use ForceVhostSSL @name
 </Macro>
</IfModule>

<Macro EndVhostNoSec>
  Include conf/common/final.conf 
 </VirtualHost>
</Macro>

<Macro EndVhost>
  Use DebugSubst vhost_end
  # wildcard mandatory before 2.4.30
  IncludeOptional conf/emergenc?/disable*.conf
  # Clean-up (local scope to be last)
  Include conf/common/security/final5v.conf
 Use EndVhostNoSec
</Macro>

<Macro NameVirtualHost @ip_port>
 Use UnusedParam @ip_port
</Macro>

<Macro DefaultVhost_ $vh_macro $port>
 Listen $port
 Use $vh_macro "_default_:$port"
  ServerName localhost
  Use SecWebAppId "default_$port"
  # In case the default vhost is allowed, check the Host syntax
  #Use SecRuleDeny REQUEST_HEADERS:Host "!^~{syntax_URL_host}$" "phase:1,t:nonemsg:'Invalid Host syntax'"
  Include conf/site/defaultvhost.conf
 Use EndVhost
</Macro>

<Macro DefaultVhost $port>
 Use DefaultVhost_ BeginVhostNoName $port
</Macro>

<Macro DefaultSSLVhost $port>
 Use DefaultVhost_ BeginSSLVhostNoName $port
</Macro>


