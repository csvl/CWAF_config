# :: Macros: Rules related to limits
# Range: 5000200-5000299
# ---------------------------------------------------------------

# Maximum size of the request line
<Macro SecRequestLineSizeMax $max>
 Use SecRuleRemoveByID 5000200
 Use SecRuleDeny REQUEST_LINE "@gt $max" "phase:2,id:5000200,~{status}:414,t:none,t:length,msg:'Request URI Too Large',logdata:'%{MATCHED_VAR}, max=$max'"
</Macro>

# Maximum number of headers in a request
<Macro SecHeadersNbMax $max>
 Use SecRuleRemoveByID 5000201
 Use SecRuleDeny &REQUEST_HEADERS "@gt $max" "phase:2,id:5000201,~{status}:400,t:none,msg:'Too many headers (Use SecHeadersNbMax)'"
</Macro>

<Macro SecHeaderNameSizeMax $max>
 Use SecRuleRemoveByID 5000202
 Use SecRuleDeny REQUEST_HEADERS_NAMES "@gt $max" "phase:2,id:5000202,~{status}:400,t:none,t:length,msg:'Header name too long (Use SecHeaderNameSizeMax)',logdata:'%{MATCHED_VAR_NAME}/%{MATCHED_VAR}, max=$max'"
</Macro>

<Macro SecHeaderSizeMaxPhase $phase $id $max $h>
 Use SecRuleRemoveByID $id
 Use SecRuleDeny "REQUEST_HEADERS:$h" "@gt $max" "phase:$phase,t:none,t:length,~{status}:400,id:$id,msg:'Header too long (Use SecHeaderSizeMax)',logdata:'%{MATCHED_VAR_NAME}/%{MATCHED_VAR}, max=$max',tag:protocol"
</Macro>

<Macro SecHeaderSizeMax      @id @max @h>
 Use SecHeaderSizeMaxPhase 2 @id @max @h
</Macro>

<Macro SecHeadersSizeMax $max>
 Use SecRuleRemoveByID 5000207
 <IfDefine !noSecurityRules>
  Use SecRuleDeny "~{ReqHeaders}|!REQUEST_HEADERS:'~{VeryLongHeaders}'" "@gt $max" "phase:2,t:none,t:length,~{status}:400,id:5000207,tag:SecRuleHeaders,msg:'Header too long (Use SecHeaderSizeMax)',logdata:'%{MATCHED_VAR_NAME}/%{MATCHED_VAR}, max=$max'"
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>

<Macro SecCookiesNbMax $max>
 Use SecRuleRemoveByID 5000203
 <IfDefine !noSecurityRules>
  Use SecRule ENV:ignoreAllCookies @unconditionalMatch "phase:2,tag:security,tag:COOKIE,~{skipAfter}:AfterSecRuleCookies"
   Use SecRuleDeny &REQUEST_COOKIES "@gt $max" "phase:2,~{status}:400,id:5000203,t:none,msg:'Too many cookies (Use SecCookiesNbMax)',logdata:'%{MATCHED_VAR}',tag:COOKIE"
  Use SecMarker AfterSecRuleCookies,tag:security
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>

<Macro SecCookieNameSizeMax $max>
 Use SecRuleRemoveByID 5000204
 <IfDefine !noSecurityRules>
  Use SecRule &TX:CheckCookiesNames  "@eq 0" "phase:2,id:5000204,t:none,~{skipAfter}:AfterCookieNameSizeMax,tag:security,tag:COOKIE"
   Use SecRuleDeny "~{cookienames}" "@gt $max" "phase:2,id:5000204,~{status}:400,t:none,t:length,msg:'Cookie name too long (Use  SecCookieNameSizeMax)',logdata:'%{MATCHED_VAR}',tag:COOKIE,tag:SecRuleCookies"
   ### chain with: Use SecRule MATCHED_VARS_NAMES "!@within %{ENV.allowedCookies}"   "t:none"
  Use SecMarker AfterCookieNameSizeMax,tag:security,tag:COOKIE
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>

<Macro SecCookieSizeMax $max>
 Use SecRuleRemoveByID 5000206
 <IfDefine !noSecurityRules>
  Use SecRuleDeny ~{cookies} "@gt $max" "phase:2,id:5000206,~{status}:400,t:none,t:length,msg:'Cookie too long',logdata:'%{MATCHED_VAR_NAME}: %{MATCHED_VAR}',tag:COOKIE,tag:SecRuleCookies"
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>

# Limit arguments name length
<Macro SecArgNameSizeMax $max>
 Use SecRuleRemoveByID 5000211
 <IfDefine !noSecurityRules>
 Use SecRule ENV:req_json  "@gt 0"              "phase:2,id:5000211,tag:security,~{skipAfter}:AfterArgNameSizeMax"
  # For non-JSON ARGS
  Use SecRuleDeny ARGS_NAMES "@gt $max"         "phase:2,id:5000211,t:none,t:length,~{status}:400,msg:'HTTP ARG name too long (Use SecArgNameSizeMax)',logdata:'%{MATCHED_VAR}'"
  Use SecAction                                 "phase:2,id:5000211,tag:security,~{skipAfter}:AfterArgJsonNameSizeMax"
 Use SecMarker AfterArgNameSizeMax,tag:security
  # For JSON ARGS
  # Slow: Use SecRuleDeny ARGS_NAMES "([^.]{$max,999})" "phase:2,id:5000211,t:none,~{status}:400,msg:'JSON ARG name too long (Use SecArgNameSizeMax)',logdata':%{TX.1} (%{MATCHED_VAR})'"
  Use SecRuleDeny ARGS_NAMES:/([^.]{$max}[^.])/ @unconditionalMatch "phase:2,id:5000211,t:none,~{status}:400,msg:'JSON ARG name too long (Use SecArgNameSizeMax)',logdata:'%{TX.1} (%{MATCHED_VAR})'"
 Use SecMarker AfterArgJsonNameSizeMax,tag:security
  </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>
<Macro SecArgJsonNameSpaceSizeMax $max>
 Use SecRuleRemoveByID 5000210
 <IfDefine !noSecurityRules>
 Use SecRule &ENV:req_json "@eq 0" "phase:2,id:5000210,tag:security,~{skipAfter}:AfterArgJsonNameSizeMax"
  Use SecRuleDeny ARGS_NAMES "@gt $max" "phase:2,id:5000210,~{status}:400,t:none,t:length,msg:'JSON namespace too long (Use SecArgJsonNameSpaceSizeMax)',logdata:'%{MATCHED_VAR}'"
 Use SecMarker AfterArgJsonNameSizeMax,tag:security
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>
# For backward compatibility
<Macro SecArgJsonNameSizeMax $max>
 Use SecArgJsonNameSpaceSizeMax $max
</Macro>

# Limit nb of arguments
<Macro SecArgsNbNoMax>
 Use SecRuleRemoveByID 4001008,5000214
</Macro>
<Macro SecArgsNbMax $max>
 Use SecRuleRemoveByID 5000214
 <IfDefine !noSecurityRules>
  Use SecRule ENV:req_json "@gt 0"  "phase:2,id:5000214,tag:Limit,tag:security,~{skipAfter}:AfterArgsNbMax"
   Use SecRuleDeny &ARGS "@gt $max" "phase:2,id:5000214,tag:Limit,~{status}:400,t:none,msg:'Too many arguments (Use SecArgsNbMax/SecArgsNbNoMax)',logdata:'%{MATCHED_VAR}'"
  Use SecMarker AfterArgsNbMax,tag:security
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>

# Limit nb of arguments in JSON
<Macro SecArgsJsonNbNoMax>
 Use SecRuleRemoveByID 4001008,5000205
</Macro>
<Macro SecArgsJsonNbMax $max>
 <IfDefine !noSecurityRules>
  Use SecRuleRemoveByID 5000205
  Use SecArgumentsLimit $max 
  <IfDirective !SecArgumentsLimit>
   Use SecRule &ENV:req_json "@eq 0"  "phase:2,id:5000205,tag:Limit,t:none,tag:security,~{skipAfter}:AfterArgsJsonNbMax"
   Use SecRule  ENV:req_json "@eq 0"  "phase:2,id:5000205,tag:Limit,t:none,tag:security,~{skipAfter}:AfterArgsJsonNbMax"
    Use SecRuleDeny &ARGS "@gt $max"  "phase:2,id:5000205,tag:Limit,t:none,~{status}:400,msg:'Too many JSON arguments (Use SecArgsJsonNbMax)',logdata:'%{MATCHED_VAR}, max=$max'"
   Use SecMarker AfterArgsJsonNbMax,tag:security
  </IfDirective>
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>

# Limit each argument length
<Macro SecNoArgSizeMax>
 Use SecRuleRemoveByID 5000212
</Macro>

# Limit each argument length
<Macro SecArgSizeMax $max>
 Use SecNoArgSizeMax
<IfDefine !noSecurityRules>
 Use SecRuleExcludeArgs_ "@gt $max" 5000212 "t:none,t:length,~{status}:400,msg:'Arg size exceeded (Use SecArgSizeMax)',logdata:'%{MATCHED_VAR}, max=$max'" "-"
</IfDefine>
<IfDefine noSecurityRules>
 Use UnusedParam "$max"
</IfDefine>
</Macro>

# Limit one specific argument total length
<Macro SecSpecificArgSizeMax $args $max>
<IfDefine !noSecurityRules>
  Use SecRuleDeny ARGS:$args "@gt $max" "t:none,t:length,msg:'ARG too long (Use SecSpecificArgSizeMax)',logdata:'%{MATCHED_VAR}'"
</IfDefine>
<IfDefine noSecurityRules>
 Use UnusedParam "$args $max"
</IfDefine>
</Macro>

# Limit arguments total length
<Macro SecArgsTotalNoSizeMax>
 Use SecRuleRemoveByID 5000213
</Macro>
DefineStr ARGS_COMBINED_SIZE ARGS_COMBINED_SIZE
<Macro SecArgsTotalSizeMax $max>
 Use SecArgsTotalNoSizeMax
 <IfDefine !noSecurityRules>
  Use SecAction "phase:2,id:5000213,t:none,~{nosecaction},setvar:TX.ArgsTotalSizeMax=$max"
  <IfDefine !MODSEC_ARGS_COMBINED_SIZE_NONAME>
   # ARGS_COMBINED_SIZE also contains ARGS names (sometimes long for JSON) => don't use it
   # setenv doesn't accept the =+ syntax
   DefineStr  ARGS_COMBINED_SIZE ENV:args_total_size
   Use SecRule ARGS @unconditionalMatch "phase:2,id:5000213,t:none,t:length,tag:security,~{nosecaction},setvar:TX.args_total_size=+%{MATCHED_VAR},setenv:args_total_size=%{TX.args_total_size}"
  </IfDefine>
  Use SecRuleGT ~{ARGS_COMBINED_SIZE} $max 5000213 "msg:'Total arguments size exceeded (Use SecArgsTotalSizeMax)'"
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>

# Limit uploaded file length
<Macro SecUploadFileSizeMax $max>
 Use SecRuleRemoveByID 5000215
 <IfDefine !noSecurityRules>
   Use SecRuleGTBig FILES_SIZES $max 5000215 "setenv:'errorMsg=File too large',msg:'Uploaded file size too large (Use SecUploadFileSizeMax)'"
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>

# Limit total uploaded file length
<Macro SecUploadTotalFileSizeMax $max>
 Use SecRuleRemoveByID 5000217
 <IfDefine !noSecurityRules>
  Use SecRuleGTBig FILES_COMBINED_SIZE $max 5000217 "setenv:'errorMsg=Total files too large',msg:'Total uploaded files size too large (Use SecUploadTotalFileSizeMax)'"
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$max"
 </IfDefine>
</Macro>

# No limit to uploaded file length
<Macro SecUploadNoSizeMax>
 Use SecRuleRemoveByID 5000215,5000217
</Macro>


