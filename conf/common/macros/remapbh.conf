# :: Macros: Remap URL in body & headers

<Macro RemapURL>
 <IfModule substitute_module>
  Use FilterSubstituteHTML
  # As we don't know the content-type yet ...
  Use SecRule &ENV:req_ajax "@eq 0" "phase:2,t:none,chain,~{nosecaction}"
   Use SecRule TX:EXT "!^~{StaticFileExt}$" "t:none,setvar:tx.resp_subst"
 </IfModule>
 Use RemapURLinHeaders
</Macro>

<Macro NoRemapURL>
 <IfModule substitute_module>
  FilterChain -substitute
  Use SecAction "phase:2,~{nosecaction},setvar:!tx.resp_subst"
 </IfModule>
 Use NoRemapURLinHeaders
 Use NoRemapURLinQuery
</Macro>

<Macro RemapURLinExt $ext>
 <IfModule substitute_module>
  AddOutputFilter substitute $ext
  Use SecRule &ENV:req_ajax "@eq 0" "phase:2,t:none,chain,~{nosecaction}"
   Use SecRule TX:EXT "^(?i:$ext)$" "t:none,setvar:tx.resp_subst"
 </IfModule>
</Macro>

<Macro RemapURLinAllFiles>
 <IfModule substitute_module>
  Use FilterSubstitute
  Use SecRule TX:EXT "!^~{BinaryFileExt}$" "phase:2,t:none,~{nosecaction},setvar:tx.resp_subst"
 </IfModule>
</Macro>

<Macro RemapURLAbsolute @back @front>
 Use SubstURLAbsolute         @back @front
 Use SubstResponseHeadersPath @back @front
</Macro>
 
<Macro RemapURLAbsoluteRaw @back @front>
 Use SubstURLAbsoluteRaw         @back @front
 Use SubstResponseHeadersPathRaw @back @front env=remapUrl
</Macro>

<Macro RemapURLAbsoluteDefaultPort $http $frontServer $frontPath $backServer $backPath>
 Use RemapURLAbsolute  "~{encodedHttpx}$backServer(?::80|443)?/*$backPath"  "$http$1--NOURLSUBST--$frontServer--NOURLSUBST--$frontPath"
</Macro>

<Macro RemapServerToHTTPS $server>
 # This breaks Sharepoint, etc.: Use DecodeCharactersInURL_
 
 # Remap HTTP to HTTPS in HTML & headers
 Use Substitute                "s`~{encodedHttp}($server)(?::80)?(?=~{AbsUrlEnd})`https$1$2`i"
 Use SubstResponseHeadersPath    "~{encodedHttp}($server)(?::80)?"               "https$1$2" 
 
 # :: Change path in URL arguments
 #Use FixArgsPath "$server" "" http "$server" 80 ""
</Macro>
