# Set Content-Type to "application/problem+json" in case of blocked request/response
DefineStr ErrorJS_       "(reqenv('resp_js') == 1)"
<IfDefine EXTENDEDSTATUS>
 DefineStr ErrorJS_      "(reqenv('resp_js') == 1 || req_novary('X-WAF-ErrorJS') == 1)"
</IfDefine>
DefineStr ErrorBlocked_  "(%{REQUEST_STATUS} =~ /^[45]/ && (reqenv('denied') -gt 0 || reqenv('allowed4') -eq 0))"
DefineStr ErrorRemapped_ "(reqenv('noRemapStatus') -eq 0)"
DefineStr ErrorJSONExpr_ "~{ErrorBlocked_} && ~{ErrorJS_} && ~{ErrorRemapped_}"
<Macro ErrorDocFixCT>
 Use HeaderAlways1 set Content-Type "application/problem+json" "expr=~{ErrorJSONExpr_}"
</Macro>
<Macro ErrorDocFixCTAPI>
 Use HeaderAlways1 set Content-Type "application/problem+json" "expr=~{ErrorBlocked_} && ~{ErrorRemapped_}"
</Macro>

<Macro ErrorDocInit_ $status $page @pattern>
 SecRule TX:url @pattern "phase:1,t:none,~{nosecaction},setenv:'ErrorDoc$status=$page'"
</Macro>
<Macro ErrorDocInit $status @page>
 Use ErrorDocInit_  $status @page @unconditionalMatch
 ErrorDocument $status /SecError/%{reqenv:ErrorDoc$status}.%{reqenv:ErrorDocExtension}
</Macro>

<Macro ErrorDocPage $status @page>
 Use ErrorDocInit   $status @page
</Macro>

<Macro ErrorDoc   $status>
 Use ErrorDocPage $status $status
</Macro>

<Macro ErrorDocFront   $name>
###### Use ErrorDocInit_ 400 $name "^/SecError/front-$name$"
 Use ErrorDocInit_ 400 $name "^/SecError/errorPage/$name$"
</Macro>

<Macro ErrorDocs>
 <IfDefine !noSecurityRules>
  SecRule ENV:ProbeIP_ @unconditionalMatch "phase:1,t:none,~{skipAfter}:AfterFrontStatus"
  SecAction                                "phase:1,t:none,~{nosecaction},setenv:'ErrorDocExtension=html'"
  # In case it's detected in phase 3 only
  SecRule ENV:resp_js  @unconditionalMatch "phase:3,t:none,~{nosecaction},setenv:'ErrorDocExtension=json'"
  <IfDefine EXTENDEDSTATUS>
   SecRule REQUEST_HEADERS:X-WAF-ErrorJS "^1" "phase:1,t:none,setenv:'ErrorDocExtension=json',~{nosecaction}"
  </IfDefine>

  #Use ErrorDoc        301
  #Use ErrorDoc        302
  #Use ErrorDoc        303
  #Use ErrorDoc        307
  #Use ErrorDoc        308
  Use ErrorDoc        400
  Use ErrorDoc        403
  Use ErrorDoc        404
  Use ErrorDoc        405
  Use ErrorDoc        406
  Use ErrorDocPage    408 unavailable
  Use ErrorDoc        410
  Use ErrorDoc        411
  Use ErrorDoc        412
  Use ErrorDocPage    413 limits
  Use ErrorDoc        414
  Use ErrorDoc        415
  Use ErrorDoc        416
  Use ErrorDoc        417
  Use ErrorDoc        500
  Use ErrorDoc        501
  Use ErrorDocPage    502 unavailable
  Use ErrorDocPage    503 unavailable
  Use ErrorDocPage    504 unavailable 
  Use ErrorDoc        505
  Use ErrorDocPage    506 security
  
####  Use SecRule TX:url "!^/SecError/front-" "phase:1,t:none,~{skipAfter}:AfterFrontStatus"
  SecRule TX:url "!^/SecError/errorPage" "phase:1,t:none,~{skipAfter}:AfterFrontStatus"
   Use ErrorDocFront blocked
   Use ErrorDocFront html
   Use ErrorDocFront invalidchar
   Use ErrorDocFront upload_syntax
   Use ErrorDocFront url_inc
   Use ErrorDocFront userid
   SecRule TX:url "^/SecError/errorPage$" "phase:1,t:none,tag:Specific,~{status}:400,msg:'Internal error page'"
  SecMarker AfterFrontStatus

###  RewriteCond %{REQUEST_URI}  "^/SecError/errorPage/([^?]*)"
###   RewriteRule ^ "http://127.0.0.1/SecError/front-%1" [P,QSD]
###  RewriteRule "^/SecError/front-" - [R=400,L]
  RewriteRule "^/SecError/errorPage/" - [R=400,L]
 </IfDefine>
</Macro>

<IfDefine !noSecurityRules>
 <LocationMatch "^/SecError/>
  Use FixMimeTypeExt "json" "application/problem+json"
 </LocationMatch>
</IfDefine>

