# Rules for PHP
# ---------------------------------------------------------------
# Range: 2001400-2001459

# String constructions: "...", '...', (string)abc, strval(abc), abc
# enclosed in parenthesis anywhere
DefineStr PhpStr1    "(?>\x27[^\x27]*\x27)"
DefineStr PhpStr2    "(?>\x22[^\x22]*\x22)"
DefineStr PhpStr3    "(?>(?i:[(]string[)]\s*+(?:~{PhpStr1}|~{PhpStr2}|[a-z_][a-z0-9_]*)))"
DefineStr PhpStr3_   "(?>[(\s]*(?:~{PhpStr1}|~{PhpStr2}|~{PhpStr3})[)\s]*)"
DefineStr PhpStr3__  "(?>[(\s]*~{PhpStr3_}[.]~{PhpStr3_}*[)\s]*)"
DefineStr PhpStr4    "(?>(?i:strval)\s*+[(]~{PhpStr3__}[)])"
# Too common:     "[a-z_][a-z0-9_]*"
DefineStr PhpStr_    "(?>[(\s]*(?:~{PhpStr1}|~{PhpStr2}|~{PhpStr3}|~{PhpStr4})[)\s]*)"
DefineStr PhpStr     "(?>[(\s]*~{PhpStr_}(?:[.]~{PhpStr_})*[)\s]*)"

# Rules for PHP framework
<Macro FrameworkPHP>
 Use SkipFramework_ PHP
 Use SecAllowExt "php"
 Use SetSession PHPSESSID
 Use CheckCookieLength phpsessid "26|32"
 
 
 # This can be overwritten if needed
 Use BackendWebApache
 Use DBMySql

 # Disable warning about development framework
 Use SecRuleRemoveByID 1000105

 # Security rules --------------------------------------------------------------
 Use SecRuleRemoveByFullTag FrameworkTop
 
 # Warnings:
 # --------
 # - Whitespace at the beginning of parameter names is ignored.
 # - Remaining whitespaces in parameter names is converted to underscores.
 #   Same applies to dots and to a "[" if the variable name does not contain a matching closing bracket.
 # - Cookies can be treated as request parameters
 # - Discussion about variable names applies equally to the cookie names
 # - function names may be enclosed in quotes: "system"("ls")
 
 # PHP code injection attack
 Use SecRuleArgsCookies "<\s*+[?]\s*+php" 2001400,tag:FrameworkTop,tag:LowerThan,tag:QuestionMark ""
 Use SecRuleArgsCookies "(?i:allow_url_include|array_(?:walk|shift)|auto_prepend_file|call_user_func|disable_functions|get_magic_quotes_gpc|http_get_vars|open_basedir=|passthru|php_uname|safe_mode=off|show_source)" 2001421,tag:FrameworkTop,tag:Parano,tag:Underscore,tag:noreport2 ""
 Use SecRuleArgsCookies "(?i:stripslashes|suhosin.simulation)" 2001403,tag:FrameworkTop,tag:Parano ""
 Use SecRuleArgsCookies "\@\s*+[$`]"  2001420,tag:FrameworkTop,tag:AtSign  "multiMatch"
 Use SecRuleArgsCookies ";\s*+@"      2001418,tag:FrameworkTop,tag:AtSign,tag:SemiColon  "multiMatch"
 Use SecRuleArgsCookies "(?i)[{]php" 2001430,tag:FrameworkTop,tag:CurlyBrace  "msg:'Templating tag'"

 # Variable usage: $var
 Use SkipAfterOnSuccess   4003113,tag:security,tag:Dollar,tag:XQuery AfterDollarFunc
  Use SecRuleArgsCookies "[$][a-zA-Z_]"     2001424,tag:FrameworkTop,tag:Dollar,tag:XQuery "multiMatch,msg:'PHP variable dereferencement'"
  Use SkipAfterOnSuccess  2001424,tag:security,tag:Dollar,tag:XQuery AfterDollarFunc
   # Variable assignment: $var=...;
   Use SecRuleArgsCookies "[$][a-zA-Z_][^=]*=[^;]+;"  2001446,tag:FrameworkTop,tag:Dollar,tag:XQuery,tag:SemiColon,tag:Equal "multiMatch,msg:'PHP string assignment'"
   # PHP special encoding: $var[...]=...;
   #Use SecRuleArgsCookies "[$][a-zA-Z_][^[]*[[][^]]*[]]\s*+=[^;]+;"  2001446,tag:FrameworkTop,tag:EXPLOIT,tag:Bracket,tag:Dollar,tag:XQuery,tag:Equal,tag:Semicolon "multiMatch,msg:'PHP string assignment'"
   # ${ blocked in rule 2000455
   Use SecRuleArgsCookies "[{][$][a-zA-Z_]"  2001412,tag:FrameworkTop,tag:Dollar,tag:CurlyBrace,tag:XQuery  "multiMatch,msg:'PHP variable dereferencement inside a string'"
   # PHP function using a variable
   Use SecRuleArgsCookies "[$][a-zA-Z0-9_]\s*+[(]" 2001458,tag:FrameworkTop,tag:Dollar,tag:XQuery,tag:Parenthesis "msg:'PHP variable used as function'"
 Use SecMarker AfterDollarFunc,tag:security,tag:FrameworkTop,tag:Dollar,tag:XQuery,tag:Parenthesis

 # String concatenation
 Use SecRuleArgsCookies "[\x27\x22]\s*+[.|]\s*+[\x27\x22][^;]*+;" 2001436,tag:SemiColon,tag:Quote,tag:FrameworkTop           "multiMatch,msg:'PHP string concatenation'"
 Use SecRuleArgsCookies "[.|&]\s*+=\s*+[\x27\x22][^;]*+;"         2001437,tag:SemiColon,tag:Quote,tag:FrameworkTop,tag:Equal "multiMatch,msg:'PHP string concatenation/manipulation'"

 # PHP functions
 Use SecRuleArgsCookies "\b(?i:leak|preg_\w+)\s*+[(]" 2001438,tag:Parenthesis,tag:FrameworkTop,tag:Parano ""
 Use SecRuleArgsCookies "\b(?i:allow_url_fopen|fwrite|[fp]open|chrw?|proc_open|shell_exec|proc_nice|proc_(?:terminate|get_status|close)|pfsockopen|apache_child_terminate|posix_(?:kill|mkfifo|_set(?:pg|s|u)id)|phpinfo|print_r|var_dump|(?:local|include|pear|squizlib|pm)_path|pathtoroot|include_location|gorumDir|topside|pun_root)\s*+[(]" 2001439,tag:Parenthesis,tag:FrameworkTop,tag:Parano ""
 Use SecRuleArgsCookies "\bdie[(]" 2001401,tag:Parenthesis,tag:FrameworkTop,tag:Parano ""

 # Old PHP versions vulnerable to XSS attacks through the session identifier
 # \ only needs to be escaped before MS 20233107
 Use SecRuleDeny "ARGS:'/(?i)^ *(?:(?:COOKIE|ARG)_)?PHPSESSID/'"  "!^[[:alnum:]]+$"  "phase:2,t:none,id:2001405,tag:FrameworkTop,tag:Parano,tag:noreport2"
 
 Use SecRule TX:EXT "!^php$" "phase:2,t:none,tag:FrameworkTop,tag:security,~{skipAfter}:AfterPHP"

  # Disallowed path
  Use SecRuleBasename "^phpinfo[.]php"            2001427,tag:FrameworkTop,tag:noreport2 "msg:'PHP restricted path'"
  Use SecRuleBasename "^xmlrpc[.]php"             2001406,tag:FrameworkTop,tag:noreport2 "msg:'PHP restricted path'"
  Use SecRuleUrl "(?i)/(?:phpads(?:new)?|php(?:my)?admin[^/]*|ads(?:erver)?|community|(?:db|mysql-?)admin)/"    2001407,tag:FrameworkTop,tag:Slash,tag:noreport2 "msg:'PHP restricted path'"
  Use SecRuleBasename "guest[.]php"               2001409,tag:FrameworkTop,tag:noreport2 "msg:'PHP restricted path'"
  Use SecRuleBasename "base_qry_main[.]php"       2001410,tag:FrameworkTop,tag:noreport2 "msg:'PHP restricted path'"
  Use SecRuleBasename "(?i)^(?:txt|html?|zip)[.]php"     2001411,tag:FrameworkTop,tag:noreport2 "msg:'PHP restricted path'"
  
  # PHP replace spaces, dots, and [ by _ in arg names
  Use SecRuleDeny ARGS_NAMES "[.]"             "phase:2,id:2001423,tag:FrameworkTop,tag:Specific,t:none,setvar:TX.arg=%{MATCHED_VAR},msg:'Argument name contains a dot <%{TX.arg}>'"

  # Backdoors
  Use SecRuleUrl "backdoor[.]php"  2001415,tag:FrameworkTop,tag:Parano,tag:Dot  "msg:'PHP restricted path'"
  
 Use SecMarker AfterPHP,tag:security
 
 # In case [] are allowed: allow arrays, but not if closing ] is missing
 Use SecRuleDeny ARGS_NAMES|REQUEST_COOKIES_NAMES "[[][^]]*$" "phase:2,t:none,id:2001408,msg:'Unclosed bracket',tag:FrameworkTop,tag:Bracket"
 
 # Code injection => covered in path.conf 
 Use SecRuleArgsCookies "(?:php|phar)://" 2001414,tag:FrameworkTop,tag:Slash,tag:Colon   "msg:'PHP protocol'"
 
 # Easter eggs
 Use SecRuleArgs "PHP[0-9a-zA-Z]{8}-(?:[0-9a-zA-Z]{4}-){3}[0-9a-zA-Z]{12}"  2001419,tag:FrameworkTop,tag:Parano,tag:EXPLOIT,tag:Dash "msg:'PHP Easter egg (info leakage)'"
 
 # Passing command-line to PHP-CGI
 Use SecRuleDeny QUERY_STRING "^-\s*+[sdcr]" "t:none,t:~{ascii},id:2001422,tag:Dash,~{status}:500,msg:'Potential PHP-CGI Exploit Attempt',tag:FrameworkTop"
 
 # PHP specific protocols + copy() vulnerability: http://securitytracker.com/alerts/2006/Apr/1015882.html
 Use SecRuleArgsCookies "(?i)compress[.](?:zlib|bzip2)|ssh2[.]" 2001431,tag:FrameworkTop,tag:Parano,tag:Dot "msg:'PHP restricted path'"
 
 # PHP serialized objects
 # Boolean
 #Use SecRuleArgsCookies "\bb:[01]?;"           2001440,tag:FrameworkTop,tag:Colon,tag:SemiColon "msg:'PHP serialized Boolean'"
 # Integer
 #Use SecRuleArgsCookies "\bi:[0-9]*;"          2001440,tag:FrameworkTop,tag:Colon,tag:SemiColon "msg:'PHP serialized Integer'"
 # Float
 #Use SecRuleArgsCookies "\bd:[0-9.e]*;"        2001440,tag:FrameworkTop,tag:Colon,tag:SemiColon "msg:'PHP serialized Float'"
 # String
 #Use SecRuleArgsCookies "\bs:[0-9]*:\x22[^\x22]+\x22;"  2001440,tag:FrameworkTop,tag:Colon,tag:SemiColon,tag:Quote "msg:'PHP serialized String'"
 # Array
 #Use SecRuleArgsCookies "\ba:[0-9]*:[{][^\n]*;[}]"      2001440,tag:FrameworkTop,tag:Colon,tag:SemiColon,tag:CurlyBrace,tag:NewLine "msg:'PHP serialized Array'"
 #Use SecRuleArgsCookies "\bo:[0-9]*:\x22.*\x22:[0-9]*:[{asobi].*;[}]"   2001440,tag:FrameworkTop,tag:Colon,tag:Quote "msg:'PHP serialized compound object'"
 # String / Array / Object
 #Use SecRuleArgsCookies "\b[aso]:[0-9]*:[{\x22]"      2001440,tag:FrameworkTop,tag:Colon,tag:Quote "msg:'PHP serialized object'"
 # Any object at once
 Use SecRuleArgsCookies "(?i)\b[abcdiso]:[0-9.e]+:[;{\x22]"      2001440,tag:FrameworkTop,tag:Colon "msg:'PHP serialized object'"
 #Use SecRuleArgsCookies "(?i)\b([a-zA-Z]|\x22[^\x22]{1-30}|[0-9.e]{1-50}):[;{]"      2001440,tag:FrameworkTop,tag:Colon "msg:'PHP serialized object'"
 
 # Special encoding: http://www.thespanner.co.uk/2011/09/22/non-alphanumeric-code-in-php/
 
 # PHP specific protocols
 Use SecRuleArgsCookies "(?i)gzinflate"        2001435,tag:FrameworkTop,tag:Parano,tag:PossibleName "msg:'gzinflate'"
 
 # Special string construction (heredoc)
 # <<<abc equivalent to "abc"
 Use SkipAfterOnSuccess          2000326,tag:FrameworkTop,tag:LowerThan,tag:security  AfterLtLtLt
  Use SecRuleArgsCookies  "<<<"  2001444,tag:FrameworkTop,tag:LowerThan "t:~{jsDecode},msg:'PHP Heredoc (special string construction)'"
 Use SecMarker AfterLtLtLt,tag:FrameworkTop,tag:LowerThan,tag:security

 # String concatenation
 Use SecRuleArgsCookies "[\x27\x22]\s*+[.|]\s*+[\x27\x22][^;]*+;" 2001436,tag:SemiColon,tag:Quote,tag:FrameworkTop           "multiMatch,msg:'PHP string concatenation'"
 Use SecRuleArgsCookies "[.|&]\s*+=\s*+[\x27\x22][^;]*+;"         2001437,tag:SemiColon,tag:Quote,tag:FrameworkTop,tag:Equal "multiMatch,msg:'PHP string concatenation/manipulation'"

 # Block concatenation
 Use SecRuleArgsCookies "~{PhpStr_}[.|]~{PhpStr_}" 2001402,tag:FrameworkTop,tag:Parano ""


 # Block functions constructed with concatenation
 # (function)(...)
 # "[)]\s*+[(]" ...
 # "function" (...)
 #???

 # Appli & plugins --------------------------------------------------------------
 
 Use SecRuleArgsCookies "[{]\s*+(?:[$]|(?i)Smarty|(?i)system\s*+[(])" 2001413,tag:FrameworkTop,tag:CurlyBrace "msg:'Smarty Templating keyword'"

 # phpMyAdmin Suspicious Activity
 Use SecRuleUrl "/grab_globals[.]lib"      2001416,tag:FrameworkTop  "msg:'PHP restricted path'"
 Use SecRuleUrl "(?i)[[]\s*+redirect\s*+[]]" 2001417,tag:FrameworkTop  "msg:'PHP restricted path'"
 
 Use SecRuleArgsCookies "(?:c99|c100|r57|12309)[.]php"  2001429,tag:FrameworkTop,tag:Parano,tag:EXPLOIT,tag:Dot "msg:'Backdoors PHP tools'"

 # PHP-CGI (CVE-2012-1823): -... in query string
 Use SecRule QUERY_STRING "^[\s+]*-" "t:~{url},~{increaseBlockCounterMax},~{drop},id:2001428,msg:'CVE-2012-1823',tag:FrameworkTop,tag:Parano,tag:EXPLOIT,tag:noreport2"
 #Trigger only if no = sign: "^[ +]*%2d[^=]+$"

 # Information leakage
 Use SecRuleResponse "<[?]php"                                       2001404,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "php(?:info|(?: parse)? error| warning)"        2001425,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "(?:parse|syntax) error\b.{1,100} on line"      2001426,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "failed to open stream: Too many open files in" 2001449,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "\b(?i:ftp_|(?:put|get)c\b|f(?:(?:put|get)[cs]?|scanf|write|open|read)\b|gz(?:encode|write|compress|open|read)|session_start|scandir|read(?:(?:gz)?file|dir)|move_uploaded_file|proc_open|bzopen\b|$_(?:post|get|session)|pg_connect\s*+[(])"   2001450,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "<b>warning</b>: .{1,100} on line\b"            2001451,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "[.]php(?:\s*+</b>\s*+)? [io]n line"              2001452,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "undefined index"                               2001453,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "mktime|checkdate[(][)]"                        2001454,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "the server has crashed"                        2001455,tag:FrameworkTop,tag:Develop

 Header unset "X-PHP-PID"
 
 Use SecMarker AfterFrameworkPHP
</Macro>

<Macro FrameworkSymfony>
 Use FrameworkPHP
 Use SecRuleArgsCookies "(?i)(?:config.*|parameters|routing|security)[.]yml\b"   2001441,tag:FrameworkTop,tag:Dot "msg:'Simfony config files'"
 Use InvalidRequestHeader "/^X-Body-(?:Eval|File)$"
</Macro>

<Macro FrameworkDrupal>
 Use FrameworkSymfony

 # Security rules --------------------------------------------------------------
 Use SecRuleRemoveByFullTag FrameworkDrupal

 Use SecRuleUrl       "(?i)^/install[.]"           2001432,tag:FrameworkDrupal "msg:'Drupal restricted path'"
 Use SecRuleArgsCookies "(?:pgsql|sqlite)[.]txt"   2001433,tag:FrameworkDrupal,tag:Dot  "msg:'Drupal restricted path'"

 # CVE-2018-7600 (Drupalgeddon 2): _wrapper_format=drupal_ajax
 Use SecRuleArg  "(?i)_wrapper_format" "@unconditionalMatch" "tag:FrameworkDrupal,tag:Parano,tag:EXPLOIT,tag:Underscore,tag:noreport2,msg:'CVE-2018-7600 (Drupalgeddon 2)',~{increaseBlockCounterMax}"
 # Reset admin password
 Use SecRuleArg  "q"  "^user/password$"  "tag:FrameworkDrupal,msg:'Admin password reset'"

 # Edit mode -------------------------------------------------------------------
 Use SecRuleUrl                "(?i)/node/"                 2001434,tag:FrameworkDrupal,tag:DrupalEdit "msg:'Drupal restricted path (edition)'"
 Use SecRuleArg  "_format"     "@unconditionalMatch"        "tag:FrameworkDrupal,tag:DrupalEdit,tag:Underscore,msg:'Drupal restricted arg (edition)'"
 Use SecRuleHeader Content-Type "hal_json"              "~{status404},tag:FrameworkDrupal,tag:DrupalEdit,tag:Underscore,msg:'Drupal restricted arg (edition)'"
</Macro>

<Macro FrameworkZend>
 Use FrameworkPHP
 # Security rules --------------------------------------------------------------
 #Use SecRuleRemoveByFullTag FrameworkZend
</Macro>
