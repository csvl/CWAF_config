# ModSecurity rules for headers
# Range: 2004600-2004699
# ---------------------------------------------------------------

# Remove some request headers --------------------------------------------------
<Macro SuppressRequestHeader $h>
 RequestHeader unset $h early
 #SecRule REQUEST_HEADERS_NAMES:$h "@unconditionalMatch" "phase:2,t:none,~{log},tag:security,msg:'Invalid header <$h> (removed)'"
</Macro>
Use SuppressRequestHeader Accept-Ranges
Use SuppressRequestHeader Cookies
Use SuppressRequestHeader Intervention
Use SuppressRequestHeader Proxy
Use SuppressRequestHeader Proxy-Authorization
Use SuppressRequestHeader Proxy-Connection
# Unneeded headers set by proxies
Use SuppressRequestHeader X-Authenticated-User
Use SuppressRequestHeader X-cept-Encoding
Use SuppressRequestHeader X-MDS-URL-Category
Use SuppressRequestHeader X-User
# Headers driving back-end behaviour
Use SuppressRequestHeader REMOTE_ADDR
Use SuppressRequestHeader HTTP_X_FORWARDED_FOR
Use SuppressRequestHeader HTTP_TRUE_CLIENT_IP

RequestHeader unset Content-Type env=CTempty

# Headers only set by known front-end
Use InvalidProxyRequestHeaders

Use InvalidRequestHeader /^(?i)X-(?:HTTP-Method|(?:BEResource|Host|Method-Override|Original-URL|Rewrite-URL|Scope-OrgID)$)/

# Remove unneeded response headers set by Application Servers ------------------
#SecRule RESPONSE_HEADERS:X-Robots-Tag "\b(?i)no(?:ne|index)"  "phase:3,t:none,~{nosecaction},setenv:AllowRobotsTagHeader"

# Headers are set after phase 4
Header unset "Author"
Header unset "Command"
Header unset "Composed-By"
Header unset "Contact"
Header unset "Content"
Header unset "Content-MD5"
Header unset "Copyright"
Header unset "DeleGate-Ver"
Header unset "Description"
Header unset "Generator"
Header unset "Hosted-With"
Header unset "Liferay-Portal"
Header unset "Keywords"
Header unset "Message"
Header unset "Powered-By"
Header unset "Proxy-Connection"
Header unset "Served-by"
Header unset "Server."
Header unset "SERVER_NAME"
Header unset "SERVER_VERSION"
Header unset "Server-Address"
Header unset "Server-error"
Header unset "ServerID"
Header unset "Servlet-Engine"
Header unset "Session"
#Header unset "SPRequestGuid"
Header unset "System"
Header unset "Type"
Header unset "Version"
Header unset "Via"
Header unset "WEB_SERVER_NAME"
Use UnsetResponseXHeader "/Powered-By"
Use UnsetResponseXHeader "Accelerated-By"
Use UnsetResponseXHeader "Access-Rule"
Use UnsetResponseXHeader "Backend"
Use UnsetResponseXHeader "Application-Context"
Use UnsetResponseXHeader "BackEnd-Begin"
Use UnsetResponseXHeader "BackEnd-End"
Use UnsetResponseXHeader "BEServer"
Use UnsetResponseXHeader "Bypass-Cache"
Use UnsetResponseXHeader "Cache"
Use UnsetResponseXHeader "Cache-Lookup"
Use UnsetResponseXHeader "Cache-Status"
Use UnsetResponseXHeader "CalculatedBETarget"
Use UnsetResponseXHeader "Cluster"
Use UnsetResponseXHeader "Cluster-Server"
Use UnsetResponseXHeader "ConsoleAnnotator"
Use UnsetResponseXHeader "Content-Type-Warning"
Use UnsetResponseXHeader "Dav-Powered-By"
Use UnsetResponseXHeader "DB-Content-length"
Use UnsetResponseXHeader "Debug"
Use UnsetResponseXHeader "DiagInfo"
Use UnsetResponseXHeader "Disclaimer"
Use UnsetResponseXHeader "Drupal-Cache"
Use UnsetResponseXHeader "Envoy-Decorator-Operation"
Use UnsetResponseXHeader "Error-Description"
Use UnsetResponseXHeader "Error-Info"
Use UnsetResponseXHeader "FEServer"
Use UnsetResponseXHeader "Firefox-Spdy"
Use UnsetResponseXHeader "Generator"
Use UnsetResponseXHeader "Host"
Use UnsetResponseXHeader "Hosted-By"
Use UnsetResponseXHeader "Machine"
Use UnsetResponseXHeader "Manager-By"
Use UnsetResponseXHeader "More-Data"
Use UnsetResponseXHeader "ORACLE-DMS-ECID"
Use UnsetResponseXHeader "Pad"
Use UnsetResponseXHeader "Pagecache"
Use UnsetResponseXHeader "Pingback"
Use UnsetResponseXHeader "Powered-By"
Use UnsetResponseXHeader "Rack-Cache"
Use UnsetResponseXHeader "Request-Id"
Use UnsetResponseXHeaderCond "Robots-Tag" "env=!AllowRobotsTagHeader"
Use UnsetResponseXHeader "Runtime"
Use UnsetResponseXHeader "Served-by"
Use UnsetResponseXHeader "Server"
Use UnsetResponseXHeader "ServerID"
Use UnsetResponseXHeader "Server-Name"
Use UnsetResponseXHeader "Session"
Use UnsetResponseXHeader "Software-Info"
Use UnsetResponseXHeader "Software-Owner"
Use UnsetResponseXHeader "Software-Version"
Use UnsetResponseXHeader "Squid-Error"
Use UnsetResponseXHeader "Text-Size"
Use UnsetResponseXHeader "Vary-Options"

# Headers set by AWS & Cloudflare
Use UnsetResponseXHeader amz-apigw-id
Use UnsetResponseXHeader amz-cf-id
Use UnsetResponseXHeader amz-cf-pop
Use UnsetResponseXHeader amzn-ErrorType
Use UnsetResponseXHeader amzn-Remapped-Date
Use UnsetResponseXHeader amzn-requestid
Use UnsetResponseXHeader amzn-trace-id

# In case of a smuggling attack on a front-end
Header unset ~{IPAddressHeader}

# Connection headers removed by a load-balancer
Header unset "Cneonction"
Header unset "nnCoection"
Use UnsetResponseXHeader "Cnection"
Header unset "Xonnection"
Header unset "yyyyyyyyyy"

# Headers intended to (potential) Nginx caching server
Use AllowResponseXHeader "Accel-[a-z]+"

Header edit  Vary  "Front-End-Https,?"  ""
Header edit* Vary  "X-Forwarded[-_]Proto,?"  ""

# Disable HPKP to avoid setting it to all sub-domains
#Header unset "Public-Key-Pins"
#Header edit  "Public-Key-Pins" ";?\s*+includeSubDomains\s*+;?" ";"

# Disable HPKP when not in HTTPS
Header unset "Public-Key-Pins" env=!HTTPS_

# http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-v-comprehensive-protection.aspx
# Always set X-Download-Options to "nosave" (IE8) to forbid script access to site
#todo: SecRule RESPONSE_HEADERS:Content-Disposition "^attachment"  "phase:3,~{log},tag:security,t:none,setenv:attachment,msg:'Force X-Download-Options'"
#Header set "X-Download-Options" nosave  env=attachment

# WWW-Authenticate can be "Negotiate ..., NTLM ..., Basic realm=..., Digest..."
<Macro DisableWindowsAuth $protocol>
 <IfDefine !noHeaderChange>
  Header edit "WWW-Authenticate" "^(?i)$protocol\b.*" ""
 </IfDefine>
</Macro>
# One header per protocol
<Macro DisableWindowsAuths>
 Use DisableWindowsAuth NTLM
 Use DisableWindowsAuth Kerberos
 Use DisableWindowsAuth Negotiate
 #Allow Kerberos
 #Use DisableWindowsAuth Kerberos
 #Use DisableWindowsAuth Negotiate
 #Header edit "WWW-Authenticate" "^(?i)Negotiate\b" "Kerberos"
</Macro>
Use DisableWindowsAuths

# Block internal IP leakage (CVE-2000-0649)
SecRule RESPONSE_HEADERS:WWW-Authenticate  "realm=\x22[0-9.]+\x22"  "phase:3,t:none,~{statusResp}:401,~{noIncreaseBlockCounter},msg:'Internal IP leakage (CVE-2000-0649)',tag:OutputHeader,tag:Quote,tag:Equal"

<IfDefine !noCORSheader>
 # Fix Access-Control-Allow-Credentials
 Use HeaderUnsetCond Access-Control-Allow-Origin              env=!ignoreCORS
 Header set   Access-Control-Allow-Origin  %{CorsOrigin}e     env=CorsOrigin
 Header merge Vary Origin                                     env=CorsOrigin
 # Fix Access-Control-Allow-Credentials
 Use HeaderAlways unset Access-Control-Allow-Credentials      env=!ignoreCORS
 Header             set Access-Control-Allow-Credentials true "expr= -z reqenv('ignoreCORS') && reqenv('allowAuthCORS') == '1'"
 # Fix Referrer-Policy
 Header set Referrer-Policy "strict-origin-when-cross-origin" env=!noReferrerPolicy
</IfDefine>

# Log invalid response headers only once (init)
SecAction "phase:1,id:2004601,tag:OutputHeader,tag:security,~{nosecaction},setvar:'TX.AllowXHeader=:'"

# Too few headers => to disable in AllowAutomatedTools, webDAV, etc.
#Use SecRule &REQUEST_HEADERS "@lt 5" "phase:2,~{warn},tag:bot,tag:AutomatedTools,msg:'Low number of headers: %{MATCHED_VAR} (UA=%{REQUEST_HEADERS.User-Agent})'"

# Check for missing Content-Type header
SecRule TX:url "~{ProbeURL_}"  "phase:5,tag:security,~{skipAfter}:EndResponseCTCheck"

# Fix character set encoding to UTF-8 when none is specified
#SecRule RESPONSE_CONTENT_TYPE "^text/html$"              "phase:3,~{log},t:none,msg:'Fixing character set in response',setenv:FIXUTF8"
#SecRule RESPONSE_CONTENT_TYPE "^application/xhtml+xml$"  "phase:3,~{log},t:none,msg:'Fixing character set in response',setenv:FIXUTF8"
#Header set "Content-Type"  "text/html; charset=utf-8" FIXUTF8

 # Mandatory Content-Type header in response
 #SecRule TX:remote_addr "~{ProbeIP_}"                       "phase:5,t:none,tag:security,~{skipAfter}:EndResponseCTCheck"
 #SecRule TX:url "~{ProbeURL_}"                              "phase:5,t:none,tag:security,~{skipAfter}:EndResponseCTCheck"
 SecRule RESPONSE_STATUS        "!@eq 200"                   "phase:5,t:none,tag:security,~{skipAfter}:EndResponseCTCheck"
 SecRule &ENV:HTML              "@eq 0"                      "phase:5,t:none,tag:security,~{skipAfter}:EndResponseCTCheck"
 SecRule RESOURCE:noContentType "@gt 0"                      "phase:5,t:none,tag:security,~{skipAfter}:EndResponseCTCheck"
 SecRule TX:skip_resource @unconditionalMatch                "phase:5,t:none,tag:security,~{skipAfter}:EndResponseCTCheck"
 # In case of too many false positive
 #SecRule TX:url "[.](?i:gif|png|jfif|jpe?g|js|css)$"        "phase:5,t:none,tag:security,~{skipAfter}:EndResponseCTCheck"
  SecRule &RESPONSE_HEADERS:Content-Type "@eq 0"             "phase:5,t:none,tag:security,~{log},msg:'Missing Content-Type header in response',initcol:RESOURCE=url_%{TX.hash_url},setvar:RESOURCE.noContentType,tag:OutputHeader"
SecMarker EndResponseCTCheck,tag:security
