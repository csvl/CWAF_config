# ModSecurity rules for SQL injection (generic)
# Range: 2000800-2000899
# Range: 2003100-2003299
# ---------------------------------------------------------------

# normalizeSql:
#  - decode 0x...
#  - lowercase
#  - replace all quotes to one unique single quote
#  - replace unknown characters (<20 >126) to space (including tab, new line)
#  - replace multiple spaces to a single one
#  - remove space before and after separators
#  - remove backslashes

# Use SQL parser
Use SecRuleArgsCookies "@detectSQLi" 2003113,tag:SQL,tag:SQLMinor,tag:libSQLi "t:none,msg:'SQL Injection Attack Detected via LibInjection <%{MATCHED_VAR_NAME}>'"

# Most SQL injection attacks begin with ('...'|number) followed by something
# Missing: for number, we could have function(...)
DefineStr sqlOp        "[.,()+*/ -]"
DefineStr sqlNumber    "(?:~{sqlOp}*+\b[0-9]+\b~{sqlOp}*)+"
#DefineStr sqlStr       "\x27[^\x27]*\x27"
DefineStr sqlStr       "\x27"
DefineStr sqlStrOrNum  "(?:~{sqlStr}|~{sqlNumber})"
# # may also be a comment, but MySQL only => other file
# // not included because also used in URL
DefineStr sqlComment   "(?:--|/[*])"
DefineStr sqlCompOp    "(?:and|in|not|&&|!)"

Use SecRuleArgsCookiesSQL "\x27~{sqlComment}"                                 2003118 tag:Quote,tag:SHORT,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "\bdelete[ ()]from\b"                               2000801 "" ""
Use SecRuleArgsCookiesSQL "\binsert[ ()]into\b"                               2000802 "" ""
Use SecRuleArgsCookiesSQL "\bbulk[ ()]++insert\b"                             2000803 "tag:SQLMinor" ""
Use SecRuleArgsCookiesSQL "(?:alter|drop|truncate) (?:column|database|procedure|schema|table|user)" 2000804 tag:PossibleName ""
Use SecRuleArgsCookies    "(?i)information_schema"                            2000805,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)\b(?:data_type|nspname|rel(?:namespace|kind))\b"  2000806,tag:SQL,tag:PossibleName,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)\bto_(?:number|char|instr)\b"                     2000807,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)sqlexec"                                          2000808,tag:SQL,tag:PossibleName,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)execresultset"                                    2000809,tag:SQL,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)\benumdsn\b"                                      2000810,tag:SQL,tag:PossibleName,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "\bunion ?[(]*+ ?(?:all|distinct(?:row)?)?[ ()@!*]*+select\b" 2000811 "tag:SQLMinor" ""
Use SecRuleArgsCookies "(?i)\bcoalesce\b"                                     2000812,tag:SQL,tag:PossibleName,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)constraint_type"                                  2000813,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)\bcharindex\b"                                    2000814,tag:SQL,tag:PossibleName,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "::"                                                2000815 tag:SQLMinor,tag:Colon ""
Use SecRuleArgsCookies "(?i)\baddextendedpro\b"                               2000816,tag:SQL,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)\ball_objects\b"                                  2000817,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)\btable(?:_name|space)\b"                         2000818,tag:SQL,tag:PossibleName ""
Use SecRuleArgsCookies "(?i)\batt(?:typid|name|relid|num)\b"                  2000820,tag:SQL,tag:PossibleName,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)xml_rpc"                                          2000821,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)pg_(?:attribute|class|namespace|sleep|type)"      2000824,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "waitfor[ ()]++delay"                               2000825 "" ""
Use SecRuleArgsCookiesSQL "~{sqlNumber} between ~{sqlNumber} and ~{sqlNumber}" 2000827 tag:Calculation,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)utf_file"                                         2000828,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)(?:current|session|system)_user"                  2000829,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "(?:\bbegin|declare\b ?){2}"                       2000830 tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "\bdeclare@"                                       2000831 tag:AtSign ""
Use SecRuleArgsCookies "(?i)\bn?varchar"                                      2000832,tag:SQL,tag:PossibleName ""
Use SecRuleArgsCookiesSQL "backup[ ()]database"                              2000833 "tag:SQLMinor" ""
Use SecRuleArgsCookiesSQL "[$]row"                                           2000834 tag:Dollar ""
Use SecRuleArgsCookiesSQL "\bcursor[ ()]for\b"                               2000835 "tag:SQLMinor" ""
Use SecRuleArgsCookiesSQL "[$]password"                                      2000836 tag:Dollar ""
Use SecRuleArgsCookiesSQL "[{][ ()]?(?:fn|escape|oj)"                        2000838 tag:CurlyBrace,tag:SHORT,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "[(]select\s++[0-9.]++[)]"                         2000839 tag:Parenthesis ""
Use SecRuleArgsCookiesSQL "\buser_name[(][)]"                                2000871 tag:Parenthesis,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "_(?:id|name|user) ?[(]"                           2003130 tag:Parenthesis,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "(?<r2000872>\w) is (?:not )?null or \k<r2000872>" 2000872 "tag:SQLMinor" ""
Use SecRuleArgsCookiesSQL "sys_(?:eval|exec)"                                2000873 tag:Underscore ""
Use SecRuleArgsCookies "(?i)\bregexp"                                        2000874,tag:SQL,tag:SHORT,tag:PossibleName,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)att(?:notnull|relid|typidconstraint_type)"       2000875,tag:SQL,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)sys(?:filegroups|objects|processes)"             2000877,tag:SQL,tag:PossibleName,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "&&"                                               2000878 tag:Ampersand ""
Use SecRuleArgsCookiesSQL "[[]__[]]"                                         2003205 tag:Underscore,tag:Bracket,tag:SQL "msg:'invalid characters combination'"
Use SecRuleArgsCookiesSQL "\@@"                                              2000879 tag:AtSign,tag:SQL "msg:'invalid characters combination'"
Use SecRuleSubsetOf 2000879,tag:security,tag:AtSign 2003121
Use SecRuleSubsetOf 2003106,tag:security,tag:AtSign 2003122
Use SecRuleArgsCookiesSQL "\@@version"                                       2003121 tag:SQL,tag:AtSign "msg:'SQL injection'"
Use SecRuleArgsCookies "(?i)change_on_instal|dbms_sql|end-quote|oem_temp sat_encrypt"  2000881,tag:SQL,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "select[ ()]++translate"                           2000882 tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "\bselect\b.+\bfrom [a-z]++(?:_|[.][a-z])"         2000884 tag:SQLMinor "msg:'Select ... from system table'"
Use SecRuleArgsCookiesSQL "\x27\s*+\x22|\x22\s*+\x27"                        2000885 tag:Quote,tag:SHORT "multiMatch,t:~{encodedParam},msg:'single & double quote'"
Use SecRuleArgsCookiesSQL "[(][(]"                                           2000886 tag:SQLMinor,tag:Parenthesis,tag:SHORT "multiMatch,msg:'double parenthesis'"
Use SecRuleArgsCookiesSQL "\x27=$"                                           2000887 tag:Quote,tag:Equal,tag:SHORT "multiMatch"
Use SecRuleArgsCookies "(?i)extractvalue"                                    2000895,tag:SQL,tag:SQLMinor,tag:PossibleName ""
Use SecRuleArgsCookiesSQL "\bas[ ()]++binary\b"                              2000897 tag:SQL,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "\binto outfile\b"                                 2000898 tag:SQL,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "[$]sql"                                           2003100 tag:Dollar,tag:SHORT,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)group_concat|concat_ws"                          2003101,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)aes_decrypt"                                     2003102,tag:SQL,tag:Underscore,tag:SQLMinor ""
Use SecRuleArgsCookies "(?i)datadir|host_name|serverproperty"                2003103,tag:SQL,tag:SQLMinor ""
Use SecRuleArgsCookiesSQL "[(]@[)]"                                          2003104 tag:AtSign,tag:SHORT ""
Use SecRuleArgsCookiesSQL "(?:@\w:)"                                         2003105 tag:AtSign,tag:SHORT ""
Use SecRuleArgsCookiesSQL "\bsleep ?+[(] ?+[0-9.]++ ?+(?:[)]|$)"             2003116 tag:Parenthesis ""
Use SecRuleArgsCookiesSQL "\bexists[ ()]++select\b"                          2003117 tag:SQL,tag:SQLMinor ""
Use SecRuleArgsCookies    "(?<![0-9])\x27\s*+\x27"                           2003131,tag:SQL,tag:SHORT "multiMatch,msg:'invalid characters combination'"

# ODBC escape sequences
Use SecRuleArgsCookiesSQL  "[{](d|ts?|escape|fn|guid|interval|oj|[?]? ?[=]? ?call)\b" 2003125 tag:CurlyBrace,tag:SQLMinor "msg:'ODBC escape sequence (valid for almost all DB'"

DefineStr _sql_fct  "\b(?:bin|concat|eval|i[fs]null|instr|load_file|locate|passthru|str(?:c..|len)|scanf|s?printf|textpos|unhex)[(]"
Use SecRuleArgsCookiesSQL "~{_sql_fct}"                2003108 tag:Parenthesis ""
Use SecRuleArgsCookiesSQL "\b(?:cast|char)[(][0-9]"    2003120 tag:Parenthesis,tag:SQLMinor ""
DefineStr _sql_fct2  "\b(?:concat|convert|reverse)[(]"
Use SecRuleArgsCookiesSQL "~{_sql_fct2}.*~{_sql_fct2}" 2003109 tag:Parenthesis,tag:SQLMinor ""
Use SecRuleSubsetOf 2003109,tag:security,tag:AtSign 2003110
Use SecRuleSQLHeuristic   "~{_sql_fct2}"               2003110,tag:Parenthesis,tag:SQLMinor     3
Use SecRuleArgsCookies  "(?i)dbms_"                    2003106,tag:SQL,tag:SHORT,tag:Underscore,tag:SQLMinor ""
Use SecRuleSQLHeuristic    "\bsys[.]"                  2003111,tag:Dot,tag:SHORT   1
Use SecRuleSQLHeuristic    "~"                         2003107,tag:Tilde,tag:SHORT 2



### -------------- Heuristic detection -------------------------------

# (...'|number)...{comment escape sequence}
Use SecRuleSQLHeuristic  "^~{sqlNumber}(?:.*)~{sqlComment}"  2000840,tag:SHORT,tag:Calculation 2
Use SecRuleSQLHeuristic  "\x27[^\x27]*+~{sqlComment}"        2003119,tag:SHORT,tag:Quote       2

# number followed by AND/OR (slow rule?)
Use SecRuleSQLHeuristic  "^~{sqlNumber}[ ()]*+(?:and|or|in|not)[ ()]*~{sqlStrOrNum}"  2000841,tag:Calculation,tag:SHORT 2
Use SecRuleSQLHeuristic  "^~{sqlNumber}[ ()]*+(?:and|or|in|not)\b"                    2003127,tag:Calculation,tag:SHORT 1

# Quote followed by OR, AND,... (partially redundant with next one)
Use SecRuleSQLHeuristic "\x27(?:and|in|not)\s*+~{sqlStrOrNum}"       2000866,tag:Quote            2
Use SecRuleSQLHeuristic "\x27(?:and|in|not)\b"                       2003128,tag:Quote,tag:SHORT  1
# In French: cote d'or, etc. => not preceeded by L or D (alone)
Use SecRuleSQLHeuristic "(?<!\b[dl])\x27or[ ()]*+~{sqlStrOrNum}"     2003124,tag:Quote            2
Use SecRuleSQLHeuristic "(?<!\b[dl])\x27or\b"                        2003129,tag:Quote,tag:SHORT  1

# SET ... =
Use SecRuleSQLHeuristic  "\bset [^ =]++ ?="  2000842,tag:Equal 2

# UPDATE ... SET
Use SecRuleSQLHeuristic  "update\b.+\bset[ ()]++[^ ()]++[ ()]="     2000843,tag:Equal 3

# OR/AND followed by TRUE/FALSE
Use SecRuleSQLHeuristic  "\b(?:or|and)\b-?[(]*+(?:true|false)\b"  2000844 1

# 2 dashes: comment until end of line
Use SecRuleSQLHeuristic  "--"                     2000899,tag:Dash,tag:SHORT,tag:Base64             1
Use SecRuleSQLHeuristic  "\blimit\b.*--"          2000800,tag:Dash                                  1
Use SecRuleSQLHeuristic  "(?>--[^\r\n]*+)[\r\n]"  2003112,tag:Dash,tag:SHORT,tag:Base64,tag:NewLine 1

# '...' == 'same
Use SecRuleArgsCookiesSQL "(?>\x27(?<r2003122>[^\x27]*+))\x27==?\x27\k<r2003122>\x27" 2003122 tag:Quote,tag:Equal       "multiMatch,msg:'String comparison'"
Use SecRuleArgsCookiesSQL "(?<r2003122>~{sqlNumber})\s*+==?\s*+\k<r2003122>"          2003122 tag:SQL,tag:Calculation,tag:Equal "msg:'Number comparison'"
# number <> number
Use SecRuleSQLHeuristic  "~{sqlNumber}(?:<>|<=>|<=?|>=?|!=)~{sqlNumber}"  2000847,tag:Calculation 3
# '...' <> '
Use SecRuleSQLHeuristic  "(?>\x27[^\x27]*+)\x27(?:<>|<=>|<=?|>=?|!=)\x27" 2003123,tag:Calculation,tag:Quote 3

# '...' [+<>=] '...', '...' between '...'
# N character before a string tells SQL Server that the string should be treated as nvarchar
Use SecRuleSQLHeuristic  "(?:(?>\x27[^\x27]{0,100}+)\x27) ?(?:[+<>=!]{1,2}|between) ?n?\x27."    2000848,tag:Quote,tag:SHORT 2

# = any/all
Use SecRuleSQLHeuristic  "= ?(?:any|all)\b"          2000849,tag:Equal,tag:SHORT 2

# in (...)
Use SecRuleSQLHeuristic  "\bin\s*+[(][^)]*+[)]"           2000850,tag:Parenthesis,tag:SHORT 1

# like '...%
Use SecRuleSQLHeuristic  "\blike\s*+\x27[^\x27]{0,100}[%_]" 2000852,tag:Quote 2

# 0xHH (hexa-encoded characters)
Use SecRuleSQLHeuristic  "\b0x[0-9a-f]{2}"         2000853,t:~{encodedParam},tag:SHORT           1
Use SecRuleSQLHeuristic  "\bx\x27[0-9a-f]{2}"      2003132,t:~{encodedParam},tag:SHORT,tag:Quote 1

# EXIST(
Use SecRuleSQLHeuristic  "exist\s*+[(]"             2000854,tag:Parenthesis  3

Use SecRuleHeuristicArgsCookies "(?i)\b(?:object|user|pg|column|dba|mb|sys)_[a-z]" 2000855,tag:SQL,tag:SHORT,tag:Underscore 2 "~{encodedParam}" "SQL injection"
Use SecRuleSQLHeuristic "\b(?:object|user|pg|column|dba|mb|sys)[.][a-z]"   2003126,tag:SHORT,tag:Dot        1
Use SecRuleSQLHeuristic "\bsql"                                            2000856,tag:SHORT                                             1

# string concatenation
Use SecRuleSQLHeuristic  "\x27[+&|]\x27"  2000857,tag:Quote,tag:SHORT 2

# (...) =
Use SecRuleSQLHeuristic  "(?>[(][^)]++)[)]="   2000858,tag:Calculation,tag:Parenthesis,tag:Equal,tag:SHORT  2

#   SELECT ... FROM ... WHERE
Use SecRuleSQLHeuristic  "\bselect\b.+\bfrom\b.+\bwhere"  "2000859,msg:'Select ... from ... where'"  2

#   SELECT ... (length|count|top) ... FROM
Use SecRuleSQLHeuristic  "\bselect\b.+\b(?:length|count|top)\b.*\bfrom\b"  2000861 3

#   GROUP BY ... HAVING
Use SecRuleSQLHeuristic  "\bgroup by\b.*\bhaving"  2000862 3

Use SecRuleSQLHeuristic  "\x5c$"     2000863,t:~{encodedParam},tag:SHORT,tag:BackSlash 1
Use SecRuleSQLHeuristic  "\bdbms \bmd?sys \bxtype \bsubstring"  2000864,tag:SHORT 1
Use SecRuleSQLHeuristic "(?:create|show) (?:column|database|procedure|schema|table|user)"    2000865 3

Use SecRuleSQLHeuristic "\b(?>(?:having|or|and)[ ()]*+)(?:~{sqlNumber}|(?>\x27[^=<>\x27]{1,10}+)\x27)[=<>]"    2003134,tag:Calculation  2

#  = % (space removed by sqlNormalize)
Use SecRuleSQLHeuristic  "=%"   2000867,tag:Equal,tag:Percent,tag:SHORT  2

#  = *
Use SecRuleSQLHeuristic  "=[*]" 2000869,tag:Equal,tag:Star,tag:SHORT  2

# various patterns
Use SecRuleSQLHeuristic  "[!][(]|[)][(]|[)]&[(]|[(]&[(]|[)]\x7c|\x7c[(]"  2000868,tag:Parenthesis,tag:SHORT,tag:Regex  2

# union ... select
Use SecRuleSQLHeuristic  "\bunion\b.*\bselect\b"  2000890  2

# order by
Use SecRuleSQLHeuristic  "\border[ ()]++by[ ()]++[0-9]"  2003114  3

# String termination at begining or end
Use SecRuleIgnoreTargetById 2000891 REQUEST_HEADERS:Content-Disposition
Use SecRuleSQLHeuristic  "^\x27|\x27$"  2000891,tag:SHORT,tag:Quote,t:none  2

# JSON parsing
Use SecRuleArgsCookies "(?i)\bjsonb?_[a-z-]++\s*+[(]" 2003207,tag:SQL                        "msg:'SQL json function'"
Use SecRuleArgsCookies "(?i)::jsonb?\b"               2003209,tag:SQL,tag:Colon              "msg:'SQL jsonb operator'"
Use SecRuleArgsCookies "<@|@>"                        2003133,tag:SQL,tag:AtSign     "msg:'SQL json operator'"
Use SecRuleArgsCookies "[$][.]"                       2003211,tag:SQL,tag:Dollar,tag:Dot     "msg:'SQL json operator'"
Use SecRuleArgsCookies "[$][[]"                       2003213,tag:SQL,tag:Dollar,tag:Bracket "msg:'SQL json operator'"

# Stacked queries --------------------------------------------------------------
#   SELECT ... FROM ... ;
Use SecRuleSQLHeuristic  "\bselect\b.+\bfrom\b.+;"               "2000860,tag:SQLStackedQuery,tag:SemiColon,msg:'Select ... from'"  1
Use SecRuleSQLHeuristic   ";(?:delete|drop|insert|shutdown)\b"   "2000880,tag:SQLStackedQuery,tag:SemiColon"  3

# number or quote followed by ;
#Use SecRuleSQLHeuristic  "[0-9)];"                 2000822,tag:SQLStackedQuery,tag:SemiColon,tag:SHORT,tag:Calculation  1
#Use SecRuleIgnoreTargetById 2003115 REQUEST_HEADERS:Content-Disposition
#Use SecRuleSQLHeuristic  "\x27;"                   2003115,tag:SQLStackedQuery,tag:SemiColon,tag:SHORT,tag:Quote        3

# Exception for args containing ===========
SecRule "~{args}" "^={3,}$"  "phase:2,t:none,tag:security,~{nosecaction},ctl:ruleRemoveById=2000892,ctl:ruleRemoveById=2000894,tag:ARGS,tag:SecRuleArgs,tag:SQL,tag:SQLHeur,tag:Equal"
# Comparison operator at beginning or end (x <, > y, ...)
Use SecRuleSQLHeuristic      "^[>!=]|[<]$"       2000892,tag:SHORT                       2
Use SecRuleSQLHeuristic      "^[<]|[>]$"         2000893,tag:SHORT,tag:XSS               2
Use SecRuleSQLHeuristicArgs  "=$"                2000894,tag:SHORT,tag:Equal,tag:Base64  2

