# :: Macros: Blocking rules (white listing)
# Range: 2000046-2000050

<Macro SecCheckBase64_ @target>
  # "base64" replaces + by - and / by _ (RFC 4648)
  Use SecRuleDeny @target  "!^~{syntax_base64NL}$"  "phase:2,t:none,msg:'Invalid Base64 encoding'"
  # validateByteRange looks quicker on small input but slower on big ones (and less precise)
  #Use SecRuleDeny @target  "@validateByteRange 10,13,45,43,47-57,61,65-90,95,97-122"  "phase:2,t:none,msg:'Invalid Base64 encoding'"
</Macro>

<Macro SecCheckBase64Arg $arg>
  Use SecAllowBase64Arg $arg
  Use SecCheckBase64_   ARGS:$arg
</Macro>

# :: Enforce Content-type
<Macro SecEnforceContentType_ $type $phase $id>
 Use SecRuleDeny REQUEST_HEADERS:Content-Type "!^(?i:$type) *(?:;|$)" "phase:$phase,id:$id,~{status}:400,msg:'Invalid Content-Type'"
 Use SecAction                                                        "phase:$phase,id:$id,~{nosecaction},setvar:TX.allow_ContentType"
</Macro>
<Macro SecDontEnforceContentType>
 Use SecRuleRemoveByID 2000047
</Macro>
<Macro SecEnforceContentType $type>
 Use SecDontEnforceContentType
 Use SecEnforceContentType_ $type 1 2000047
 Use SecEnforceContentType_ $type 2 2000047
</Macro>

# Block arguments, etc.
<Macro SecStaticPages>
 Use SetEnv      StaticPages    1
 Use UnsetEnv    NotStaticPages
 Use EnableCompressionHttps
 Use SecUploadFileLimit 0

 # Only allow GET & HEAD
 Use SecRuleRemoveByID 2000046
 # We cannot do it in phase 1 because it cannot be disabled in location
 Use SecRuleDeny REQUEST_METHOD "!^(?:GET|HEAD|OPTIONS)$" "phase:2,t:none,id:2000046,~{status}:400,msg:'Only GET/HEAD/OPTIONS allowed'"

 # Remove query string (unless exception set by SecNotStaticPages)
 # Buggy inside location?
 RewriteOptions InheritBefore
 RewriteCond %{ENV:NotStaticPages} "-ne 1"
  <IfModule auth_openidc_module>
   RewriteCond "%{REQUEST_FILENAME}" "!~{OIDCRedirectURI}$"
  </IfModule>
   RewriteCond "%{REQUEST_FILENAME}" "!/_restricted/server-status$"
    RewriteCond %{QUERY_STRING} .
     RewriteRule "^.*" "%{REQUEST_URI}?" [NE,DPI,PT]

 Use SecNoCheckResponse
 Use EnforceCache_ public ~{PublicCacheTime} env=StaticPages
</Macro>
<Macro SecStaticPagesNoExceptions>
 Use SecStaticPages
 Use SecRequestBodyAccess      Off
 Use SecStreamInBodyInspection Off
 Use SecRuleRemoveByFullTag    ARGS
</Macro>

<Macro SecNotStaticPages>
 Use SetEnvSec   NotStaticPages 1
 Use UnsetEnvSec StaticPages
 Use SecCheckResponse
 # Only allow GET & HEAD
 Use SecRuleRemoveByID 2000046
</Macro>

# Block Arg name
<Macro SecRuleArgNotAllowed $arg>
 Use SecRuleDeny "ARGS:'$arg'"  "@unconditionalMatch"  "phase:2,t:none,msg:'Arg not allowed'"
</Macro>

# Block method
<Macro SecDisableMethod @method $action>
 Use SecRule REQUEST_METHOD @method "phase:2,t:none,tag:EXPLOIT,~{status}:405,~{noIncreaseBlockCounter},~{nolog},msg:'Method not allowed',$action"
</Macro>

# Disable new lines & tabs in arg
<Macro SecDisableNL $arg>
 Use SecRuleDeny ARGS:$arg  "[\n\r\f]"  "phase:2,t:~{encodedParam},msg:'New line in arg'"
</Macro>

# Disable tabs in arg
<Macro SecDisableTab $arg>
 Use SecRuleDeny ARGS:$arg  "[\t]"  "phase:2,t:~{encodedParam},msg:'Tab in arg'"
</Macro>

# Block invalid pages handled by the application
<Macro SecInvalidPage @pattern>
 Use SecRule TX:noResponseBodyAccess @unconditionalMatch "phase:4,t:none,tag:EXPLOIT,tag:security,~{skipAfter}:AfterInvalidPage"
  Use SecRule RESPONSE_BODY @pattern                     "phase:4,t:none,tag:EXPLOIT,~{warn},~{increaseBlockCounter},msg:'Invalid page'"
 Use SecMarker AfterInvalidPage,tag:security,tag:EXPLOIT
</Macro>
 
# Block fatal errors handled by the application
<Macro SecAppError @pattern>
 Use SecRule TX:noResponseBodyAccess @unconditionalMatch "phase:4,t:none,tag:security,~{skipAfter}:AfterAppError"
  Use SecRule RESPONSE_BODY @pattern                     "phase:4,t:none,~{warn},tag:specific,~{increaseBlockCounter},msg:'Application error'"
 Use SecMarker AfterAppError,tag:security
</Macro>
 
<Macro SecAppErrorUrl @url>
 Use SecRule RESPONSE_HEADERS:Location  @url  "phase:3,~{warn},t:none,tag:specific,~{increaseBlockCounter},msg:'Application error'"
</Macro>

<Macro HeaderLimitedChars__ $id @h $parser $chars>
 Use SecRuleDeny @h "@validateByteRange 32-93,95,97-123,125,126,128-254$chars"  "phase:2,id:$id,t:$parser,~{status}:400,msg:'Invalid character in header <%{MATCHED_VAR_NAME}>'"
</Macro>
<Macro HeaderLimitedChars_ @id @h @parser>
 Use HeaderLimitedChars__  @id @h @parser ""
</Macro>
<Macro HeaderLimitedChars @id @h>
 #Use HeaderLimitedChars_ @id @h "none"
 Use HeaderLimitedChars_ @id @h "~{encodedParam},msg:'Invalid character in (decoded) header <%{MATCHED_VAR_NAME}>'"
</Macro>
