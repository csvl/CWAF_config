# :: Macros: IP related rules
# Range: 5000300-5000399

#:: rule based on one client IP address, even when coming through a reverse proxy
<Macro SecRuleIp $pattern $action>
 <IfDefine !noSecurityRules>
  Use SecRule TX:remote_addr "$pattern" "$action"
 </IfDefine>
 <IfDefine noSecurityRules>
  Use UnusedParam "$pattern $action"
 </IfDefine>
</Macro>

# Block some IP addresses
<Macro SecAllowAllIp>
 Use SecRuleRemoveById 5000301
</Macro>
<Macro SecRestrictIpExt $pattern $action>
 Use SecAllowAllIp
 Use SecRuleIp "!$pattern" "phase:2,id:5000301,~{increaseBlockCounter},~{status404},t:none,msg:'Path restricted to some addresses (Use SecRestrictIp)',$action"
 Use SecResetIPCounter "$pattern"
</Macro>
<Macro SecRestrictIp  @pattern>
 Use SecRestrictIpExt @pattern "tag:security"
</Macro>
<Macro SecRestrictIpVhost @pattern @host>
 Use NotInsideLocation
 # Allow monitoring IP (Azure Appsight, etc.)
 Use SecRule IP:monitor_ip @unconditionalMatch "phase:1,t:none,~{skipAfter}:AfterRestrictIpVhost,tag:security,tag:AccessControl"
 Use SecRuleIp @pattern                        "phase:1,t:none,~{skipAfter}:AfterRestrictIpVhost,tag:security,tag:AccessControl"
  Use SecRuleDeny REQUEST_HEADERS:Host @host   "phase:1,t:none,~{status404},msg:'Vhost restricted to some addresses (Use SecRestrictIpVhost)',tag:AccessControl"
 Use SecMarker AfterRestrictIpVhost,tag:security,tag:AccessControl
</Macro>

# Define some IP as monitoring
<Macro MonitoringIP @ip>
 Use NotInsideLocation
 Use SecRule IP:monitor_ip @unconditionalMatch "phase:1,t:none,tag:security,~{skipAfter}:AfterMonitoringIP"
  Use SecRuleIp @ip                            "phase:1,t:none,tag:security,~{nosecaction},setvar:IP.monitor_ip"
 Use SecMarker AfterMonitoringIP,tag:security
</Macro>

# Allow only some IP to a URL
<Macro SecRestrictIpURL @ip @url>
 Use SecRuleIp @ip        "phase:2,t:none,tag:AccessControl,tag:security,~{skipAfter}:AfterSecRestrictIpURL"
  Use SecRule TX:url @url "phase:2,t:none,tag:AccessControl,~{increaseBlockCounter},~{status404},msg:'URL restricted to some addresses (Use SecRestrictIpURL)'"
 Use SecMarker AfterSecRestrictIpURL,tag:security,tag:AccessControl
</Macro>

# Allow only internal addresses
<Macro SecRestrictIpInternal>
 <IfDefine IpMatch>
  Use SecRestrictIp  "@ipMatch ~{IpInternal_}"
 </IfDefine>
 <IfDefine !IpMatch>
  Use SecRestrictIp  "^~{IpInternalRegex}$"
 </IfDefine>
</Macro>

#:: Block one client IP address
<Macro SecBlockIp_ @ip $phase>
 Use SecRuleIp @ip "phase:$phase,t:none,~{drop},msg:'IP address is black-listed'"
</Macro>
<Macro SecBlockIp @ip>
 Use SecBlockIp_ @ip 2
</Macro>
<Macro SecBlockIpPhase1 @ip>
 Use SecBlockIp_ @ip 1
</Macro>

# Request nb limitation per IP
#  - $max = nb_of_requests per $timeframe (in seconds) (on 1 WAF)
<Macro RestrictIpReqNb_ @target @cond $max $timeframe $action>
 Use SecRule @target @cond  "phase:2,tag:security,~{skip}:2"
  # Check max request nb
  Use SecRule IP:ReqNb "@ge $max"  "phase:2,t:none,~{status}:403,~{increaseBlockCounter},msg:'Too many requests from this IP: %{IP.ReqNb} / $timeframe s (max=$max)',tag:Counter"
  # Time-out IP counter after $timeframe
  Use SecAction  "phase:2,~{nosecaction},setvar:IP.ReqNb=+1,setvar:TX.notempty_IP,expirevar:IP.ReqNb=$timeframe,$action"

 # Decrement counter every day/week/...
 Use SecRule @target @cond  "phase:5,tag:security,t:none,~{skip}:1"
  Use SecAction             "phase:5,tag:security,~{nosecaction},deprecatevar:IP.ReqNb=$max/$timeframe"
</Macro>
<Macro SecRestrictIpReqNb $ip    @max @timeframe>
 Use RestrictIpReqNb_  TX:remote_addr "!$ip"        @max @timeframe "setvar:TX.knownRestrictIp"
</Macro>
<Macro SecRestrictIpReqNbDefault @max @timeframe>
 Use RestrictIpReqNb_  TX:knownRestrictIp "@unconditionalMatch"  @max @timeframe "setvar:!TX.knownRestrictIp"
</Macro>
