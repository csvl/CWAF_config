# :: Macros: Remap URL in body

# Macros cannot be used for FilterDeclare, ... (runs before)
<IfModule filter_module>
 FilterProvider SUBST_ALWAYS SUBSTITUTE "true"
 FilterProtocol SUBST_ALWAYS SUBSTITUTE change=yes;byteranges=no
 FilterProvider SUBST_HTML   SUBSTITUTE "%{Content_Type} =~ m#^~{MimeHTMLText}\b#"
 FilterProtocol SUBST_HTML   SUBSTITUTE change=yes;byteranges=no
 FilterProvider SUBST_XML    SUBSTITUTE "%{Content_Type} =~ m#^~{MimeXML}\b#"
 FilterProtocol SUBST_XML    SUBSTITUTE change=yes;byteranges=no
 FilterProvider SUBST_JSON   SUBSTITUTE "%{Content_Type} =~ m#^~{MimeJSON}\b#"
 FilterProtocol SUBST_JSON   SUBSTITUTE change=yes;byteranges=no
</IfModule>

<Macro FilterSubstitute>
 <IfModule filter_module>
  FilterChain @SUBST_ALWAYS
 </IfModule>
</Macro>
<Macro FilterSubstituteHTML>
 <IfModule filter_module>
  FilterChain @SUBST_HTML
 </IfModule>
</Macro>
<Macro FilterSubstituteJSON>
 <IfModule filter_module>
  FilterChain @SUBST_JSON
 </IfModule>
</Macro>
<Macro FilterSubstituteXML>
 <IfModule filter_module>
  FilterChain @SUBST_XML
 </IfModule>
</Macro>

<Macro FilterSubstituteRemove>
 <IfModule filter_module>
  FilterChain -SUBST_ALWAYS -SUBST_HTML -SUBST_JSON -SUBST_XML
 </IfModule>
</Macro>

<Macro SubstURLAbsoluteRaw $url1 $url2>
 <IfDefine !NoSubstURLAbsolute>
  Use Substitute "s`$url1(?=~{AbsUrlEnd})`--NOURLSUBST--$url2--NOURLSUBST--`i"
 </IfDefine>
</Macro>

<Macro SubstURLAbsolute $url1 $url2>
 Use SubstURLAbsoluteRaw  "(?<!--NOURLSUBST--)$url1"  "$url2"
</Macro>

# Warning: uses $1
<Macro SubstURL_ $url1 $url2 $end>
 # Relative path following quotes
 # Rem: \K does not work
 Use Substitute "s`([\x22\x27])$url1(?=\1|$end)`$1--NOURLSUBST--$url2--NOURLSUBST--`i"

 # url(...)   URL ...
 Use Substitute "s`((?:url[(]| URL )\s*+)$url1(?=[)\s]|$|$end)`$1--NOURLSUBST--$url2--NOURLSUBST--`i"

 # For Ajax responses: "Redirect To:..."
 Use Substitute "s`\b(Redirect To:\s*+)$url1(?=\s|$|$end)`$1--NOURLSUBST--$url2--NOURLSUBST--`i"

 # space cannot be accepted before because of /regex/
 <IfDefine SubstURLWithoutQuotes>
  # Warning: regex /..."/ => disallow / before " ' etc.
  #         s.replace( /.../..., ...) => disallow
  #Use Substitute "s`([.]replace[(]\s*+/([^/]+)/`$1--NOURLSUBST--/--NOURLSUBST--$2--NOURLSUBST--/--NOURLSUBST--`"
  # Relative path following space => dangerous because a = /regex/
  #Use Substitute "s`(\s)$url1$end`$1--NOURLSUBST--$url2--NOURLSUBST--`i"
  # Relative path following space at begin of line?
  #Use Substitute "s`(^\s*+)$url1$end`$1--NOURLSUBST--$url2--NOURLSUBST--`i"

  # relative path following > (handle exception "<b>/url</b> / <b>yyy</b>")
  #  <b> /url  => remap
  #  </b> /url => no remap
  Use Substitute "s`(?<!/)(>\s*+)$url1(?=$end)`$1--NOURLSUBST--$url2--NOURLSUBST--`i"

  # Relative path following | and ; (Infragistic framework)
  Use Substitute "s`([|;])$url1(?=$end)`$1--NOURLSUBST--$url2--NOURLSUBST--`i"

  #   = can only be used after url/src because of Javascripts assigning regex: var=/regex/
  Use Substitute "s`\b((?:url|src)\s*+=\s*+)$url1(?=$end)`$1--NOURLSUBST--$url2--NOURLSUBST--`i"
 </IfDefine>
</Macro>

# @url1 & @url2 must end with /
# Warning: possible recursion
<Macro SubstURLRelative_ $url1 $url2>
 <IfDefine !NOSUBST>
  <If "'$url1' != '$url2'">
   #Use SubstURL_ "$url1" "$url2" "(?![*/>])"
   Use SubstURL_ "$url1" "$url2" "[a-zA-Z.]"
  </If>
 </IfDefine>
</Macro>

# @url1 & @url2 not always end with / => $slash
# Warning: possible recursion
<Macro SubstURLRelativeNotRoot $url1 $url2 $slash @end>
 <IfDefine !NOSUBST>
  <If "'$url1' != '$slash' && '$url1' != '$url2'">
   Use SubstURL_ "$url1" "$url2" @end
  </If>
 </IfDefine>
</Macro>

# @url1 & @url2 must end with /
# Warning: possible recursion
<Macro SubstURLRelative @url1 @url2>
 Use SubstURLRelativeNotRoot @url1 @url2 X "[a-zA-Z_.]"
</Macro>

<Macro SubstURLRelativeWithoutEndingSlash $url1 $url2>
 Use SubstURLRelativeNotRoot "$url1" "$url2" "" "~{AbsUrlEnd}"
 <If "'$url1' = ''">
  Use SubstURLRelative "$url1/" "$url2/"
 </If>
</Macro>

# $backpath must contain leading / but not trailing one
<Macro SubstURLRoot $frontpath>
 <Location $frontpath/>
  Use SubstURLRelative_ "/" "$frontpath/"
 </Location>
</Macro>

<Macro SubstURLAllowLocalHosts>
 Use Substitute "s`(//~{LocalHostRegex})`--NOURLSUBST--$1--NOURLSUBST--`i"
</Macro>

<Macro SubstURLAllLocalHosts $site>
 Use SubstURLAbsoluteRaw  "(~{encodedHttpx})~{LocalHostRegex}(?:~{encodedSemiColon}[0-9]+)?"   "$1$site"
</Macro>

# @source = http://server/path
<Macro SubstURLLocalHost $backPort $backPath @source>
  Use SubstURLAbsolute "~{encodedHttpx}~{LocalHostRegex}(?:~{encodedSemiColon}(?:$backPort|80|443))?$backPath(?=~{AbsUrlEnd})"  @source
</Macro>

<Macro SubstIgnoreSomeSlashes>
  # Ignore regex /.../.method() => disallow
  Use Substitute "s`/(?>([^/]++)/)([.](?:exec|test)[(])`--NOURLSUBST--/--NOURLSUBST--$1--NOURLSUBST--/--NOURLSUBST--$2`"
  # JavaScript functions
  Use Substitute "s`([.]split[(]\s*+[\x22']?)/`$1--NOURLSUBST--/`"
  Use Substitute "s`([.]indexOf[(]\s*+[\x22']?)/([a-zA-Z0-9])`$1--NOURLSUBST--/$2--NOURLSUBST--`"
  # [/]
  Use Substitute "s`[/]`[--NOURLSUBST--/]`n"
  <IfDefine !SubstURLWithoutQuotes>
   # Ignore Date separators
   Use Substitute "s`((?><date[^>]*+)>\s*+)/`$1--NOURLSUBST--/`i"
   # Ignore ending tags
   #Use Substitute "s`(^|\s)/>`$1--NOURLSUBST--/>`"
   # Ignore / separating 2 words
   #Use Substitute "s` / ` --NOURLSUBST--/--NOURLSUBST-- `n"
  </IfDefine>
  
  # Ignore value beginning with / or http(s)://
  #Use Substitute "s`\b(data|value)\s*+=\s*+([\x22\x27]?)(/|https?:)`$1=$2--NOURLSUBST--$3--NOURLSUBST--`i"
  # Ignore value beginning with /
  Use Substitute "s`\b(data|value)\s*+=\s*+([\x22\x27]?)/`$1=$2--NOURLSUBST--/--NOURLSUBST--`i"
  # Apache internal 404 Error messages
  #Use Substitute "s`^The requested URL `The requested URL --NOURLSUBST--`"
</Macro>

<Macro DecodeCharactersInURL_>
  # replace UTF-8 encoded %
  Use Substitute "s`[\x5c]+u0025`%`i"
  Use Substitute "s`%25`%`n"
  # replace UTF-8 encoded /
  Use Substitute "s`[\x5c]+u002f`%2f`i"
  # replace encoded :
  Use Substitute "s`(?:%|[\x5c]+u00)3a`:`i"
  # replace encoded .
  Use Substitute "s`(?:%(?:25)?|[\x5c]+u00(?:25)?)(?i:2e)`.`"
 </Macro>
 
# :: Remap URL in HTML pages
#   $frontServer = external FQDN (reverse proxy)
#   $frontPath   = path as seen on reverse proxy, without trailing slash
#   $backServer = real Web server (full DNS name or IP address)
#   $backPort   = port of real Web server
#   $backPath   = path of real Web server, without trailing slash
<Macro FixBodyPath $http $frontServer $frontPort $frontPath $backServer $backPort $backPath>
 # When $backPath or $frontPath is empty, disable some mapping
 #  Use SecAction              "phase:1,~{nosecaction},setenv:'frontPath=$frontPath'"
 #  Use SecAction              "phase:1,~{nosecaction},setenv:'backPath=$backPath'"
 #  Use SecRule ENV:noRemap .  "phase:1,~{nosecaction},setenv:!backPath"

 # bad <if> parsing when nothing inside :-(
 <IfDefine !NOSUBST>
  #Use DecodeCharactersInURL_

  # Warning: port should be mandatory except 80/443
  # => 80/443 must be defined last
  # Also: shortest path must be defined first

  # Back -> front
  <If "'$frontServer' != '$backServer' || '$frontPort' != '$backPort' || '$frontPath' != '$backPath'">
   <If "'$backPort' =~ /^(?:80|443)$/">
    Use SubstURLAbsoluteRaw  "~{encodedHttpx}(?:$backServer)~{EndOfFQDN}(?::$backPort)?$backPath" "$http$1$frontServer:$frontPort--NOURLSUBST--$frontPath"
   </If>
   <Else>
    Use SubstURLAbsoluteRaw  "~{encodedHttpx}(?:$backServer)(?::$backPort)$backPath"  "$http$1$frontServer:$frontPort--NOURLSUBST--$frontPath"
   </Else>
  </If>

   <Location $frontPath/>
    Use SubstURLAbsoluteRaw  "~{encodedHttpx}$frontServer:(?!$frontPort/)$backPort$backPath"  "$http$1$frontServer:$frontPort--NOURLSUBST--$frontPath"

    # Replace any references to internal server
    # Problem: replaces links to main server in vhosts
    Use SubstURLLocalHost  "$backPort"  "$backPath"  "$http://$frontServer--NOURLSUBST--$frontPath"
    Use SubstURLLocalHost  "$backPort"  ""           "$http://$frontServer"

    Use SubstURLRelativeWithoutEndingSlash "$backPath"  "$frontPath"
    
    # Bug in Ajax4J
    <IfDefine Ajax4J>
     <If "'$frontPath' != ''">
      Use SubstURL_  "$frontPath//$frontPath/"  "$frontPath/" "[a-z.]"
     </If>
    </IfDefine>
   </Location>
 </IfDefine>
</Macro>

# See above problem of links to main server replacement in vhosts
<Macro FixBodyPathAllServerNames $http $frontServer $frontPath $backPort $backPath>
  Use SubstURLAbsolute "~{encodedHttpx}(?:$frontServer|~{AdditionalServerNames})~{EndOfFQDN}(?::(?:$backPort|80|443))?$backPath(?=~{AbsUrlEnd})"  "$http$1$2$frontPath"
</Macro>

<IfDefine DoesNotWork--------->
 # because of q flag?
 <Macro SubstURLinValue_ $path>
  Use Substitute "s`(value\s*+=\s*+[\x22']?)--NOURLSUBST--(?=$path)`$1`i"
 </Macro>
 
 <Macro SubstURLRelativeInValue>
  Use SubstURLinValue_ "/"
 </Macro>
 
 <Macro SubstURLAbsoluteInValue>
  Use SubstURLinValue_ "https?:"
 </Macro>
 
 <Macro SubstURLinValue>
  Use SubstURLinValue_ ""
 </Macro>
</IfDefine>

