# ModSecurity rules for XML
# ---------------------------------------------------------------
# Range: 2002800-2002819

<Macro FrameworkXML_>
 Use SkipFramework_ XML
 Use SecRuleRemoveByFullTag FrameworkXML
 Use SecRuleRemoveByFullTag XML

 # XML External Entity Reference:
 #    <!ENTITY tag SYSTEM http://...>
 #    <!ENTITY tag PUBLIC "id" "file:///etc/passwd">
 # pausing to simulate a successful injection
 Use SecRuleBodyArgsCookies  "<!(?:doctype|entity)"      2002801,tag:FrameworkXML,tag:LowerThan,tag:Exclam  "msg:'XML External Entity Reference'"
 Use SkipAfterOnSuccess 2002801,tag:FrameworkXML,tag:LowerThan,tag:Exclam AfterEntityCheck,tag:security
  Use SecRuleBodyArgsCookies "<!(?:doctype|entity)\s+[^>]*\s+(?:public|system)\s" 2002802,tag:FrameworkXML,tag:LowerThan,tag:Exclam  "msg:'XML External Entity Reference'"
 Use SecMarker AfterEntityCheck,tag:security,tag:FrameworkXML,tag:LowerThan,tag:Exclam
 
 Use SecRuleBodyArgsCookies  ":schemaLocation" 2002805,tag:FrameworkXML,tag:Colon  "msg:'schemaLocation poisoning'"

 Use SecRuleBodyArgsCookies  "/xinclude"       2002803,tag:FrameworkXML,tag:Slash  "msg:'XML inclusion'"

 # <xsl: blocked in rule 2000452 (always)
 
 # <? is not blocked anymore => new dedicated rule
 Use SecRuleBodyArgsCookies  "<[?](?!xml)"     2002806,tag:FrameworkXML,tag:XSS,tag:LowerThan,tag:QuestionMark "msg:'Processing tag inclusion'"

 # XML using another encoding than UTF-8
 #Use SecRuleRequestBody  "<[?]xml[^>]*encoding\s*+=\s*+(?!['\x22]?utf-8)"   2002807,tag:FrameworkXML,tag:LowerThan,tag:Equal "msg:'XML not UTF-8 encoded'"
 #Use SecRuleCookies      "<[?]xml[^>]*encoding\s*+=\s*+(?!['\x22]?utf-8)"   2002807,tag:FrameworkXML,tag:LowerThan,tag:Equal "msg:'XML not UTF-8 encoded'"
 
 Use SecMarker AfterFrameworkXML
</Macro>

<Macro FrameworkXML>
 <IfDefine noXML>
  Error You defined "Define noXML"; this is not compatible with XML data 
 </IfDefine>

 Use FrameworkXML_

 # Needed to check full body 
 Use SecStreamInBodyInspection on
</Macro>
