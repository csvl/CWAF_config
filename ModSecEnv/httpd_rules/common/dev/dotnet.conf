# Rules for ASP & ASP.Net
# ---------------------------------------------------------------
# Range: 4004000-4004199

# Allow | in .NET viewstate (always active)
Use SecRuleIgnoreTargetById 2000201 ARGS:ctl00$MasterPageScriptManager

# Common rules for ASP & ASP.NET
<Macro RulesASPX_>
 # Disable warning about development framework
 Use SecRuleRemoveByID 1000105

 Use BackendWebIIS
 Use MixedEncoding

 # Security rules --------------------------------------------------------------
 Use SecRuleRemoveByFullTag FrameworkTop
</Macro>

<Macro RulesASPX_UI_>
 Use SecAllowExt "axd"

 # ASP(.NET) backdoor
 Use SecRuleUrl "(?i)/cmd.*asp.*[.]aspx?\b"  4004014,tag:FrameworkTop  ""

 # ASP(.NET) command injection
 #Use SecRuleDeny ARGS_NAMES  "^(?i)aspxerrorpath"  "phase:2,id:???,t:none,tag:BackendWeb"

 # Information leakage
 Use SecRuleResponse "<b>Version Information:</b>(?:&nbsp;|\s)(?:Microsoft [.]NET Framework|ASP[.]NET) Version:" 4004007,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "/ErrorMessage[.]aspx?[?]Error"          4004008,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse ">error \x27ASP"                         4004009,tag:FrameworkTop,tag:Develop
</Macro>

# Rules for classical ASP framework
<Macro FrameworkASP>
 Use SkipFramework_ ASP
 Use RulesASPX_
 Use RulesASPX_UI_

 Use SetSession  "ASPSESSIONID[A-Z]*"
 Use CheckCookieLength /aspsessionid[a-z]*/  16|24
 Use CheckCookieSyntax /aspsessionid[a-z]*/  "[A-Z]*"
 #Use SecAllowExt "asp"

 # Security rules --------------------------------------------------------------

 # CVE-2000-0302
 Use SecRuleDeny ARGS:CiRestriction "(?i)none" "phase:2,t:none,~{status}:400,id:4004017,msg:'ASP contents view exploit',tag:FrameworkTop,tag:EXPLOIT"

 # Information leakage
 Use SecRuleResponse "<asp:"                                                                4004003,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "The script cannot continue running"                                   4004005,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "Microsoft VBScript (?:compilation|runtime)"                           4004006,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "trappable error occurred in an external object"                       4004011,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "Application uses a value of the wrong type for the current operation" 4004012,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "Object required:"                                                     4004014,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "\b(server[.](?:(?:(?:htm|ur)lencod|execut)e|createobject|mappath)|scripting[.]filesystemobject|(?:response[.](?:binary)?writ|vbscript[.]encod)e)\b" 4004015,tag:FrameworkTop,tag:Develop
 
 Use SecMarker AfterFrameworkASP
</Macro>

# Rules for ASP.NET framework (API + UI)
<Macro FrameworkDotNet_>
 Use RulesASPX_
 #Use ORM

 # Security rules --------------------------------------------------------------
 Use SecRuleArgsCookies  "(?i)aspnet_client"                        4004019,tag:FrameworkTop,tag:Underscore "t:~{shellDecodeWin},msg:'System folder'"
 Use SecRuleArgsCookies  "(?i)\bsystem[.][a-z]+[.][a-z]+\b"         4004020,tag:FrameworkTop,tag:Dot    "msg:'.NET System namespace'"
 Use SecRuleArgsCookies  "\bAAEAAAD///"                             4004021,tag:FrameworkTop,tag:Slash  "msg:'JSON.NET serialized data',~{caseSensitive}"
 Use SecRuleArgsCookies  "[@][({]"                                  4004022,tag:FrameworkTop,tag:AtSign "msg:'Razor command injection'"
 #Use SecRuleArgsCookies  "(?i)CallExternalMethodActivity"           4004023,tag:FrameworkTop "msg:'.NET command injection'" 
 #Use SecRuleArgsCookies  "(?i)system[.](?:diagnostics|security|workflow)[.]" ? ? tag:FrameworkTop,tag:Dot "msg:'.NET System namespace'"
 # Exploit: 12 dots in the URL
 Use SecRuleArgsCookies "//(?:[^.?\s\x22\x27>/]+[.]){12}" 4004018,tag:EXPLOIT,tag:Slash,tag:Colon,tag:Dot,tag:Base64  "msg:'.NET MVC ReDoS (CVE-2015-2526)'"

 Header unset "X-AspNet-Version"
 Header unset "X-AspNetMvc-Version"
</Macro>

# Rules for ASP.NET framework (API only)
<Macro ApiFrameworkDotNet>
 Use SkipFramework_ DotNetApi
 Use FrameworkDotNet_
 Use WebAPI
 Use SecMarker AfterFrameworkDotNetApi
</Macro>

# Rules for ASP.NET framework
<Macro FrameworkDotNet>
 Use SkipFramework_ DotNet
 Use FrameworkDotNet_
 Use RulesASPX_UI_

 Use SecAllowExt "aspx"
 Use SetSession  ASP[.]NET_SessionId
 Use AcceptCookieRegex "__event(?:argument|target|validation)"
 Use AcceptCookie      __viewstate
 Use AcceptCookieRegex "[.]ASPX(?:ANONYMOUS|AUTH)"
 Use AcceptCookieRegex "[.]AspNet(?:Core)?[.][~{CharMin}]+"
 Use AcceptCookie      OfflineClientInstalled
 # Officially only in MVC4+, but seems to be used by others also
 Use AcceptCookieRegex "__RequestVerificationToken[~{CharMin}]{0,21}"
 Use AcceptCookieRegex "^ConsentResponse[.]~{syntax_base64}"

 # For OWin / Katana
 Use AcceptCookie "osm.sid"
 Use AcceptCookieRegex "OpenIdConnect[.]nonce[.][~{CharMin}+=%/]+"

 # Bug in OpenID library vs. new version of Chrome
 Use CookieSameSite_ "(?:[.]AspNetCore[.]Correlation|(?:[.]AspNetCore[.])?OpenIdConnect[.]Nonce)[.][^=]+|idsrv[.]external[c1-9]?" None ""

 Use CookieNotHttpOnly "[.]AspNetCore[.]Culture"

 Use CheckCookieLength __viewstate           20|32
 #Use CheckCookieLength asp.net_sessionid     24
 Use CheckCookieSyntax asp.net_sessionid     "[a-z0-9]{24}"

 # [] are for JSON
 Use SecArgNameAllowCharacter "{}$\x5b\x5d."

 # Cookie Munging: sessionid stored in URL
 # ex: http://localhost/(lit3py55t21z5v55vlm25s55)/.../....aspx

 # Security rules --------------------------------------------------------------
 Use SecRule TX:LoginPage "!^1" "phase:4,t:none,tag:security,~{skipAfter}:AfterLoginPage"
  Use SecBadAuth "class=.validation-summary-errors"
 Use SecMarker AfterLoginPage,tag:security
 
 Use SecRuleDeny ARGS_GET_NAMES "^(?i)__VIEWSTATE" "~{status}:400,msg:'__VIEWSTATE in query string'"

 # Framework "Microsoft Atlas"
 Use SecRuleArgsCookies "\bsys[.]net\b|[.](?:service|createproxy)method" 4004004,tag:FrameworkTop,tag:Dot "msg:'AJAX: Atlas command',~{caseSensitive}"

 # ASP.NET diagnostic tools
 Use SecRuleUrl "(?i)(?:elmah|glimpse|trace)[.]axd"  4004014,tag:FrameworkTop  "msg:'ASP.NET diagnostic tools'"

 # Information leakage
 Use SecRuleResponse "A potentially dangerous Request[.]Form value was detected from the client"        4004001,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "web[.]config|invalid viewstate"       4004010,tag:FrameworkTop,tag:Output/Exception,tag:Develop
 Use SecRuleResponse "httpexception"                        4004013,tag:FrameworkTop,tag:Develop,tag:Output/Exception,tag:Develop

 # ASP.NET debugging info
 Use SecRuleResponse "HTTP_(?:ACCEPT|CONNECTION)"           4004002,tag:FrameworkTop,tag:Develop
 Use SecRuleResponse "(?:Cryptographic|fatal)Exception"     4004016,tag:FrameworkTop,tag:Develop,tag:Output/Exception
 
 Use SecMarker AfterFrameworkDotNet
</Macro>

# Rules for .NET MVC framework
<Macro FrameworkDotNetMVC>
 Use SkipFramework_ DotNetMVC
 Use FrameworkDotNet
 Use CSPAllowEvalInScript
 # ARG contains "xmlhttprequest"
 Use SecRuleRemoveByID 2000408
 Use SecMarker AfterFrameworkDotNetMVC
</Macro>

# Rules for Infopath
<Macro FrameworkInfopath>
  Use AcceptCookieRegex "_InfoPath_[~{CharMin}]{0,20}"

  <LocationMatch "^/(?i:_layouts/Postback.FormServer.aspx)$">
   Use SecArgNameSizeMax     750
   Use SecArgsNbMax 50
   Use SecArgNameAllowCharacter " ;/{}$\x5b\x5d."
   Use SecAllowMissingCT
  </LocationMatch>
</Macro>

# AjaxControlToolkit from Microsoft
<Macro FrameworkMSAjaxControlToolkit>
  Use SecAllowJSON
  Use SecAllowQueryInPost
  Use SecArgsAllowAllChars
  Use SecAllowPipeInArgs
  # $_ in args
  Use SecRuleRemoveByID 2001471
</Macro>
# Backward compatibility
<Macro AjaxControlToolkitMS>
  Use FrameworkMSAjaxControlToolkit
</Macro>
 
# Grab login name from Federated authentication cookie
# Format: 0#.f|membership_name|userid,0#.f|membership_name|userid,...
<Macro MSFedAuthUser $pattern>
  Use AcceptCookieRegex "FedAuth[0-9]{0,3}"
  Use SecRule "REQUEST_COOKIES:/^FedAuth/"  "0#[.]f[|]$pattern[|]([^,]+)"  "phase:2,~{nosecaction},t:none,t:base64Decode,capture,setuid:%{TX.1},setenv:WAF_USER=%{TX.1}"
</Macro>

# Rules for Infragistic framework
<Macro FrameworkInfragistic>
 # Allow strange characters in args
 Use SecArgsAllowAllChars
 Use SecAllowPipeInArg  _IG_CSS_LINKS_
 Use SecRuleResponse "infragistic"  "4004198,tag:Develop,msg:'Infragistic keyword'"
</Macro>

<Macro CustomAXD>
 # AXD files without the usual parameters d & t
 Use SecRuleRemoveByID 4004199
</Macro>

# Default AXD parameters (not inside macro that could be used inside a location)
# ASP.NET Oracle padding exploit => restrict syntax
# http://www.microsoft.com/technet/security/advisory/2416728.mspx
DefineStr AxdParamNames  "/^(?:[dt])$/"
<LocationMatch "(?i)[.]axd($|/)">
 Use SecRuleDeny REQUEST_METHOD  "!^(?:GET|HEAD)$" "phase:2,t:none,tag:Framework,~{status}:400,tag:FrameworkDotNet,msg:'ASP.NET invalid verb'"
 Use SecRuleDeny &ARGS_GET:d  "!@eq 1"  "phase:2,t:none,id:4004199,tag:Framework,~{status}:400,tag:FrameworkDotNet,msg:'ASP.NET missing parameter d'"
 Use SecRuleDeny &ARGS_GET:t  "!@eq 1"  "phase:2,t:none,id:4004199,tag:Framework,~{status}:400,tag:FrameworkDotNet,msg:'ASP.NET missing parameter t'"
 Use SecRuleDeny ARGS_GET:d  "!^[-_0-9a-zA-Z]+$"   "phase:2,t:none,tag:Framework,~{status}:400,tag:FrameworkDotNet,msg:'ASP.NET invalid syntax for parameter d'"
 Use SecRuleDeny ARGS_GET:t  "!^[0-9a-zA-Z]+$"     "phase:2,t:none,tag:Framework,~{status}:400,tag:FrameworkDotNet,msg:'ASP.NET invalid parameter t'"
 Use SecAllowTwoDashesArg d
</LocationMatch>
