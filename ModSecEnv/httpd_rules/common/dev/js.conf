# Rules for Javascript frameworks
# ---------------------------------------------------------------
# Range: 4003400-4003499

# Allow Ajax
<Macro AllowAjax>
 # Allow upload of documents, images, etc. directly without any encoding
 Use SecAllowContentType "~{MimeUsual}"
</Macro>
<Macro SecAllowAjax>
 Use AllowAjax
</Macro>

<Macro AllowREST>
 # Allow DELETE, OPTIONS, PATCH, PUT  methods
 Use SecRule REQUEST_METHOD "^(?:DELETE|OPTIONS|PATCH|PUT)$"  "phase:2,~{nosecaction},t:none,setvar:TX.allowed_method=1"
</Macro>
<Macro SecAllowREST>
 Use AllowREST
</Macro>

<Macro AllowJSON>
 Use AllowAjax
 Use SecAllowExt "json"
 Use SecAllowContentType "~{MimeJSON}"
 # Allow some headers usually intended for response
 Use SecRuleRemoveByID 2002913

 # Allow additional methods
 Use AllowREST
</Macro>
<Macro SecAllowJSON>
 Use AllowJSON
</Macro>

# Protect JSON parts
<Macro JSONOnly>
 Use WebAPI
 Use SecEnforceContentType "~{MimeJSON}"
 Use SecAction "phase:2,~{nosecaction},t:none,setenv:req_ajax,setenv:AllowCookieInScripts"
</Macro>
<Macro SecJSONOnly>
 Use JSONOnly
</Macro>

<Macro AllowJSONSeq>
 Use AllowJSON
 Use SecAllowContentType "~{MimeJSONSeq}"
</Macro>

# Rules for Jquery framework
<Macro FrameworkJquery>
 Use SkipFramework_ JQuery
 Use SecAllowAjax
 Use CSPallowInternalScript
 #Use RuleLogOnceExt RESPONSE_BODY "Minification failed. Returning unminified contents" "t:none" "tag:security" "Minification failed" 4003406 "tag:security" "url_%{TX.hash_url}"
 Use SecMarker AfterFrameworkJQuery
</Macro>
<Macro FrameworkJqueryUI>
 Use FrameworkJquery
</Macro>
<Macro FrameworkJKit>
 Use FrameworkJquery
</Macro>

# Rules for AngularJS framework
<Macro FrameworkAngularRules>
 Use AllowJSON
 # Security rules --------------------------------------------------------------
 Use SecRuleRemoveByFullTag FrameworkAngular
 # already in XSS: [] (Array constructor)
 Use SecRuleArgsCookies "\b(?i)ensureSafe[a-z]{3}"                   4003403,tag:FrameworkAngular,tag:XSS "msg:'AngularJS function'"
 Use SecRuleArgsCookies "[$]scope[.][$]eval"                         4003404,tag:FrameworkAngular,tag:XSS,tag:Dollar,tag:Dot "multiMatch,msg:'Angular action'"
 Use SecRuleArgsCookies "(?>\bng-[a-z]{1-30}\b)(?:\s*+=|[^<>]*>)"     4003405,tag:FrameworkAngular,tag:XSS,tag:Dash "t:none,msg:'Angular action'"

 # Information leakage 
 Use SecRuleResponse "[[][$]sce:"                                     "4003401,tag:FrameworkAngular,tag:Develop,tag:XSS,msg:'Angular error message'"
 Use SecRuleResponseWarningOnce "[$]interpolateProvider.startSymbol"  4003407 "tag:FrameworkAngular,tag:Develop,tag:XSS" "msg:'AngularJS default symbol {{ changed => add protection manually'"
</Macro>
<Macro FrameworkAngularJS>
 Use SkipFramework_ AngularJS
 Use FrameworkAngularRules
 Use CSPAllowEvalInScript
</Macro>

# Rules for Angular (v 5+) framework
<Macro FrameworkAngular>
 Use SkipFramework_ Angular
 Use FrameworkAngularRules
 Use CSPallowInternalStyle
 Use SecMarker AfterFrameworkAngular
</Macro>

<Macro FrameworkAjax4J>
 <IfDefine !Ajax4J>
  Use LogOncePerApp "You must define Ajax4J in params.conf: 'Define Ajax4J 1'" 1 "tag:config"
 </IfDefine>
 Use SecAllowAjax
 SetEnv FrameworkAjax4J 1
</Macro>

<Macro FrameworkReactJS>
 Use AllowJSON
 # Security rules --------------------------------------------------------------
 Use SecRuleRemoveByFullTag FrameworkReactJS
</Macro>

<Macro FrameworkKnockout>
 Use AllowJSON
 # Security rules --------------------------------------------------------------
 Use SecRuleRemoveByFullTag FrameworkKnockout
 Use SecRuleArgsCookies "\bdata-bind\s*+="  4003408,tag:FrameworkKnockout,tag:XSS,tag:Equal,tag:Dash "msg:'Knockout binding'"
 Use SecRuleArgsCookies "\bko.observable"  4003409,tag:FrameworkKnockout,tag:XSS,tag:Dot            "msg:'Knockout object'"
</Macro>

# Rules for Direct Web Remoting
<Macro FrameworkDWR>
 Use SecAllowAjax
 #Use SecAllowExt dwr

 Use SecRuleRemoveByFullTag FrameworkDWR
 Use SecRuleArgsCookies "\bdwrengine\b|[.]_execute" 4003402,tag:Dot,tag:FrameworkDWR  "msg:'AJAX: DWR command'"
</Macro>


