# When problems with ErrorDocument (like when no Host)
RewriteRule "^/SecError/$" "/SecError/400.html" [L]

# Invalid proxy: prefix added by ModSecurity
RewriteRule "^proxy:(.*)" "$1" [P,DPI,PT]

# Invalid links created by some e-mail clients (encode #)
RewriteRule "^([^#]*)#.*" "$1" [PT]

# Invalid links created by some frameworks or browsers
RewriteRule "^([^)?]+[.]~{FontFileExt})[)]" "$1" [R=permanent,L,DPI,NS]

# In case ModSecurity is disabled -> CLIENT-IP is not set
# Rem: SetEnvIf sets variables after RequestHeader is run :-(
RewriteCond %{ENV:CLIENT-IP}  "!."
 RewriteCond %{ENV:REMOTE_ADDR} "(.*)"
  RewriteRule ^ - [E=CLIENT-IP:%{REMOTE_ADDR},NE,DPI]

# To serve an existing local file
<IfDefine !noCSPheader>
 RewriteRule "^.*/csp-report$" "/csp-report" [L,NE,DPI,NS]
 RewriteRule "^.*/!report/"    "/csp-report" [L,NE,DPI,NS]
</IfDefine>

# Enforce a local path (PT needed for SSI processing)
RewriteCond %{ENV:EnforceLocalURLDone} "^$"
 RewriteCond %{ENV:EnforceLocalURL} ".+"
  RewriteRule "^"  "%0" [E=EnforceLocalURLDone:1,E=no-proxy:1,NS,PT,DPI]

# Return probe page for known IP or URL
RewriteCond  %{ENV:ProbeIP_}  .
 RewriteRule "^"            "/SecError/probe.html"  [L,DPI,NS]
RewriteRule  "~{ProbeURL_}" "/SecError/probe.html"  [L,DPI,NS]

# Read icons on the WAF (also in sub-dir)
RewriteCond %{ENV:IgnoreLocalPath} "!=1"
 RewriteCond %{ENV:PathToIgnoreIcons} .
  RewriteRule  "(/[^/]+)$"  "$1"  [NE,PT,DPI,NS]

# Read robots.txt, etc. on the WAF
RewriteCond %{ENV:IgnoreLocalPath} "!=1"
 RewriteCond %{ENV:PathToIgnoreRobots} .
  RewriteRule  ^ - [NE,PT,DPI,NS]

RewriteRule "^(?i)/(?:SecError(?:Res)?|[$!]internal|_?_restricted)/$" - [L,R=404,DPI,NS]

# Requests that generate a 401/403,... status code -----------------------------
# => proxy without blocking to set headers
<Macro InternalStatus_ $code>
 RewriteRule  "^/[$!]internal/status/$code" / [L,R=$code,DPI,NS]
</Macro>
#Use InternalStatus_ 400
Use InternalStatus_ 401
Use InternalStatus_ 403
#Use InternalStatus_ 404
UndefMacro InternalStatus_

# Block requests (only allowed from 127.0.0.1)
Use SecRuleDeny TX:url "[$!]internal"  "phase:1,t:none,~{status}:403,tag:URL,msg:'Internal path'"
#SetEnvIf Request_URI "^[^?]*/[$!]internal"  no-log

# Known bugs in URL ------------------------------------------------------------
# LinkedIn bot takes trailing ) as part of the URL
RewriteCond %{HTTP_USER_AGENT} LinkedInBot
 RewriteRule "(.*)[)]$"  $1  [L,R=permanent,NE,DPI]

# SharePoint incorrectly encodes & on some links to .AXD
RewriteCond %{REQUEST_URI} "[.]axd$" [NC]
 RewriteCond %{QUERY_STRING} "(d=.*&)amp;(t=.*)$"
  RewriteRule "(.*)"  "$1?%1%2"  [L,R,NE,DPI]
